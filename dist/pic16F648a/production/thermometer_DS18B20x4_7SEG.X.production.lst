

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec  7 21:40:01 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F648A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.10
    27                           ; Generated 31/07/2019 GMT
    28                           ; 
    29                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F648A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0092                     	;# 
    90  0098                     	;# 
    91  0099                     	;# 
    92  009A                     	;# 
    93  009B                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009F                     	;# 
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  000A                     	;# 
   105  000B                     	;# 
   106  000C                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0092                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009F                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  008C                     	;# 
   162  008E                     	;# 
   163  0092                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009F                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  008C                     	;# 
   199  008E                     	;# 
   200  0092                     	;# 
   201  0098                     	;# 
   202  0099                     	;# 
   203  009A                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009F                     	;# 
   208                           
   209                           	psect	idataBANK0
   210  0293                     __pidataBANK0:	
   211                           
   212                           ;initializer for _temp
   213  0293  34E8               	retlw	232
   214  0294  3403               	retlw	3
   215                           
   216                           	psect	nvBANK0
   217  003B                     __pnvBANK0:	
   218  003B                     _init:	
   219  003B                     	ds	1
   220  0005                     _PORTA	set	5
   221  001F                     _CMCON	set	31
   222  0037                     _RB7	set	55
   223  002F                     _RA7	set	47
   224  002E                     _RA6	set	46
   225  002C                     _RA4	set	44
   226  0036                     _RB6	set	54
   227  0035                     _RB5	set	53
   228  0034                     _RB4	set	52
   229  0033                     _RB3	set	51
   230  0032                     _RB2	set	50
   231  0031                     _RB1	set	49
   232  0030                     _RB0	set	48
   233  0028                     _RA0	set	40
   234  0086                     _TRISB	set	134
   235  0085                     _TRISA	set	133
   236  0428                     _TRISA0	set	1064
   237                           
   238                           ; #config settings
   239  0000                     
   240                           	psect	cinit
   241  07F2                     start_initialization:	
   242  07F2                     __initialization:	
   243                           
   244                           ; Initialize objects allocated to BANK0
   245  07F2  118A  2293  118A   	fcall	__pidataBANK0	;fetch initializer
   246  07F5  00B9               	movwf	__pdataBANK0& (0+127)
   247  07F6  118A  2294  118A   	fcall	__pidataBANK0+1	;fetch initializer
   248  07F9  00BA               	movwf	(__pdataBANK0+1)& (0+127)
   249                           
   250                           ; Clear objects allocated to BANK0
   251  07FA  01B6               	clrf	__pbssBANK0& (0+127)
   252  07FB  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   253  07FC  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   254  07FD                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  07FD                     __end_of__initialization:	
   258  07FD  0183               	clrf	3
   259  07FE  118A  2C1D         	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssBANK0
   262  0036                     __pbssBANK0:	
   263  0036                     _counter:	
   264  0036                     	ds	2
   265  0038                     _nosensor:	
   266  0038                     	ds	1
   267                           
   268                           	psect	dataBANK0
   269  0039                     __pdataBANK0:	
   270  0039                     _temp:	
   271  0039                     	ds	2
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:	
   275  0070                     ?_init_ds:	
   276  0070                     ??_init_ds:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_TX:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_TX:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_draw_empty:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_draw_empty:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_show_LED1:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_show_LED2:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_show_LED3:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_main:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_RX:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ??_RX:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_convert_to_segment:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_convert_to_segment:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?___wmul:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ___wmul@multiplier:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 2 bytes @ 0x0
   323  0070                     	ds	1
   324  0071                     init_ds@b:	
   325  0071                     TX@cmd:	
   326                           ; 1 bytes @ 0x1
   327                           
   328  0071                     RX@d:	
   329                           ; 1 bytes @ 0x1
   330                           
   331                           
   332                           ; 1 bytes @ 0x1
   333  0071                     	ds	1
   334  0072                     TX@temp:	
   335  0072                     RX@i:	
   336                           ; 1 bytes @ 0x2
   337                           
   338  0072                     convert_to_segment@value:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     ___wmul@multiplicand:	
   342                           ; 1 bytes @ 0x2
   343                           
   344                           
   345                           ; 2 bytes @ 0x2
   346  0072                     	ds	1
   347  0073                     ??_show_LED1:	
   348  0073                     ??_show_LED2:	
   349                           ; 1 bytes @ 0x3
   350                           
   351  0073                     ??_show_LED3:	
   352                           ; 1 bytes @ 0x3
   353                           
   354  0073                     TX@i:	
   355                           ; 1 bytes @ 0x3
   356                           
   357                           
   358                           ; 1 bytes @ 0x3
   359  0073                     	ds	1
   360  0074                     ??___wmul:	
   361  0074                     TX@control0:	
   362                           ; 1 bytes @ 0x4
   363                           
   364  0074                     ___wmul@product:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 2 bytes @ 0x4
   369  0074                     	ds	1
   370  0075                     show_LED1@c:	
   371  0075                     show_LED2@c:	
   372                           ; 1 bytes @ 0x5
   373                           
   374  0075                     show_LED3@c:	
   375                           ; 1 bytes @ 0x5
   376                           
   377                           
   378                           ; 1 bytes @ 0x5
   379  0075                     	ds	1
   380  0076                     ?___awdiv:	
   381  0076                     ___awdiv@divisor:	
   382                           ; 2 bytes @ 0x6
   383                           
   384                           
   385                           ; 2 bytes @ 0x6
   386  0076                     	ds	2
   387  0078                     ___awdiv@dividend:	
   388                           
   389                           ; 2 bytes @ 0x8
   390  0078                     	ds	2
   391  007A                     ??___awdiv:	
   392                           
   393                           ; 1 bytes @ 0xA
   394  007A                     	ds	1
   395  007B                     ??_draw_to_LED:	
   396                           
   397                           ; 1 bytes @ 0xB
   398  007B                     	ds	2
   399  007D                     ??_main:	
   400                           
   401                           ; 1 bytes @ 0xD
   402  007D                     	ds	1
   403                           
   404                           	psect	cstackBANK0
   405  0020                     __pcstackBANK0:	
   406  0020                     ___awdiv@counter:	
   407                           
   408                           ; 1 bytes @ 0x0
   409  0020                     	ds	1
   410  0021                     ___awdiv@sign:	
   411                           
   412                           ; 1 bytes @ 0x1
   413  0021                     	ds	1
   414  0022                     ___awdiv@quotient:	
   415                           
   416                           ; 2 bytes @ 0x2
   417  0022                     	ds	2
   418  0024                     ?_draw_to_LED:	
   419  0024                     ?_get_temp:	
   420                           ; 1 bytes @ 0x4
   421                           
   422  0024                     draw_to_LED@i:	
   423                           ; 2 bytes @ 0x4
   424                           
   425                           
   426                           ; 2 bytes @ 0x4
   427  0024                     	ds	2
   428  0026                     ??_get_temp:	
   429  0026                     draw_to_LED@d_135:	
   430                           ; 1 bytes @ 0x6
   431                           
   432                           
   433                           ; 2 bytes @ 0x6
   434  0026                     	ds	2
   435  0028                     draw_to_LED@d:	
   436                           
   437                           ; 2 bytes @ 0x8
   438  0028                     	ds	8
   439  0030                     get_temp@temperature:	
   440                           
   441                           ; 2 bytes @ 0x10
   442  0030                     	ds	2
   443  0032                     get_temp@signloc:	
   444                           
   445                           ; 1 bytes @ 0x12
   446  0032                     	ds	1
   447  0033                     get_temp@temp_drob:	
   448                           
   449                           ; 1 bytes @ 0x13
   450  0033                     	ds	1
   451  0034                     get_temp@temp1:	
   452                           
   453                           ; 1 bytes @ 0x14
   454  0034                     	ds	1
   455  0035                     get_temp@temp2:	
   456                           
   457                           ; 1 bytes @ 0x15
   458  0035                     	ds	1
   459                           
   460                           	psect	maintext
   461  041D                     __pmaintext:	
   462 ;;
   463 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   464 ;;
   465 ;; *************** function _main *****************
   466 ;; Defined at:
   467 ;;		line 32 in file "main.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : B00/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   481 ;;      Params:         0       0       0       0
   482 ;;      Locals:         0       0       0       0
   483 ;;      Temps:          1       0       0       0
   484 ;;      Totals:         1       0       0       0
   485 ;;Total ram usage:        1 bytes
   486 ;; Hardware stack levels required when called:    3
   487 ;; This function calls:
   488 ;;		_TX
   489 ;;		_draw_empty
   490 ;;		_draw_to_LED
   491 ;;		_get_temp
   492 ;;		_init_ds
   493 ;;		_show_LED1
   494 ;;		_show_LED2
   495 ;;		_show_LED3
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _main
   503  041D                     _main:	
   504  041D                     l1392:	
   505                           ;incstack = 0
   506                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   507                           
   508                           
   509                           ;main.c: 38:     CMCON = 0b111;
   510  041D  3007               	movlw	7
   511  041E  1283               	bcf	3,5	;RP0=0, select bank0
   512  041F  1303               	bcf	3,6	;RP1=0, select bank0
   513  0420  009F               	movwf	31	;volatile
   514  0421                     l1394:	
   515                           
   516                           ;main.c: 41:     TRISA = 0b00000000;
   517  0421  1683               	bsf	3,5	;RP0=1, select bank1
   518  0422  1303               	bcf	3,6	;RP1=0, select bank1
   519  0423  0185               	clrf	5	;volatile
   520  0424                     l1396:	
   521                           
   522                           ;main.c: 43:     init = init_ds() & 0b00000001;
   523  0424  118A  2314  118A   	fcall	_init_ds
   524  0427  3901               	andlw	1
   525  0428  00FD               	movwf	??_main
   526  0429  087D               	movf	??_main,w
   527  042A  1283               	bcf	3,5	;RP0=0, select bank0
   528  042B  1303               	bcf	3,6	;RP1=0, select bank0
   529  042C  00BB               	movwf	_init
   530  042D                     l1398:	
   531                           
   532                           ;main.c: 44:     if (!init) {
   533  042D  083B               	movf	_init,w
   534  042E  1D03               	btfss	3,2
   535  042F  2C31               	goto	u561
   536  0430  2C32               	goto	u560
   537  0431                     u561:	
   538  0431  2C3A               	goto	l1402
   539  0432                     u560:	
   540  0432                     l1400:	
   541                           
   542                           ;main.c: 45:         TX(0xCC);
   543  0432  30CC               	movlw	204
   544  0433  118A  2365  118A   	fcall	_TX
   545                           
   546                           ;main.c: 46:         TX(0x44);
   547  0436  3044               	movlw	68
   548  0437  118A  2365  118A   	fcall	_TX
   549  043A                     l1402:	
   550                           
   551                           ;main.c: 49:     TRISB = 0b00000000;
   552  043A  1683               	bsf	3,5	;RP0=1, select bank1
   553  043B  1303               	bcf	3,6	;RP1=0, select bank1
   554  043C  0186               	clrf	6	;volatile
   555  043D                     l1404:	
   556                           
   557                           ;main.c: 51:     draw_empty();
   558  043D  118A  22D4  118A   	fcall	_draw_empty
   559  0440                     l1406:	
   560                           
   561                           ;main.c: 56:         if (counter==0) {
   562  0440  1283               	bcf	3,5	;RP0=0, select bank0
   563  0441  1303               	bcf	3,6	;RP1=0, select bank0
   564  0442  0836               	movf	_counter,w
   565  0443  0437               	iorwf	_counter+1,w
   566  0444  1D03               	btfss	3,2
   567  0445  2C47               	goto	u571
   568  0446  2C48               	goto	u570
   569  0447                     u571:	
   570  0447  2C5E               	goto	l1414
   571  0448                     u570:	
   572  0448                     l1408:	
   573                           
   574                           ;main.c: 57:             init = init_ds() & 0b00000001;
   575  0448  118A  2314  118A   	fcall	_init_ds
   576  044B  3901               	andlw	1
   577  044C  00FD               	movwf	??_main
   578  044D  087D               	movf	??_main,w
   579  044E  1283               	bcf	3,5	;RP0=0, select bank0
   580  044F  1303               	bcf	3,6	;RP1=0, select bank0
   581  0450  00BB               	movwf	_init
   582  0451                     l1410:	
   583                           
   584                           ;main.c: 58:             if (!init) {
   585  0451  083B               	movf	_init,w
   586  0452  1D03               	btfss	3,2
   587  0453  2C55               	goto	u581
   588  0454  2C56               	goto	u580
   589  0455                     u581:	
   590  0455  2C5E               	goto	l1414
   591  0456                     u580:	
   592  0456                     l1412:	
   593                           
   594                           ;main.c: 59:                 TX(0xCC);
   595  0456  30CC               	movlw	204
   596  0457  118A  2365  118A   	fcall	_TX
   597                           
   598                           ;main.c: 60:                 TX(0x44);
   599  045A  3044               	movlw	68
   600  045B  118A  2365  118A   	fcall	_TX
   601  045E                     l1414:	
   602                           
   603                           ;main.c: 64:         if (nosensor==1) {
   604  045E  1283               	bcf	3,5	;RP0=0, select bank0
   605  045F  1303               	bcf	3,6	;RP1=0, select bank0
   606  0460  0338               	decf	_nosensor,w
   607  0461  1D03               	btfss	3,2
   608  0462  2C64               	goto	u591
   609  0463  2C65               	goto	u590
   610  0464                     u591:	
   611  0464  2C72               	goto	l1418
   612  0465                     u590:	
   613  0465                     l1416:	
   614                           
   615                           ;main.c: 65:             show_LED1(18);
   616  0465  3012               	movlw	18
   617  0466  118A  2295  118A   	fcall	_show_LED1
   618                           
   619                           ;main.c: 66:             show_LED2(18);
   620  0469  3012               	movlw	18
   621  046A  118A  22AA  118A   	fcall	_show_LED2
   622                           
   623                           ;main.c: 67:             show_LED3(18);
   624  046D  3012               	movlw	18
   625  046E  118A  22BF  118A   	fcall	_show_LED3
   626                           
   627                           ;main.c: 68:         } else {
   628  0471  2C8F               	goto	l1424
   629  0472                     l1418:	
   630                           
   631                           ;main.c: 69:             if (temp==1000) {
   632  0472  30E8               	movlw	232
   633  0473  0639               	xorwf	_temp,w
   634  0474  3003               	movlw	3
   635  0475  1903               	skipnz
   636  0476  063A               	xorwf	_temp+1,w
   637  0477  1D03               	btfss	3,2
   638  0478  2C7A               	goto	u601
   639  0479  2C7B               	goto	u600
   640  047A                     u601:	
   641  047A  2C88               	goto	l1422
   642  047B                     u600:	
   643  047B                     l1420:	
   644                           
   645                           ;main.c: 70:                 show_LED1(16);
   646  047B  3010               	movlw	16
   647  047C  118A  2295  118A   	fcall	_show_LED1
   648                           
   649                           ;main.c: 71:                 show_LED2(16);
   650  047F  3010               	movlw	16
   651  0480  118A  22AA  118A   	fcall	_show_LED2
   652                           
   653                           ;main.c: 72:                 show_LED3(16);
   654  0483  3010               	movlw	16
   655  0484  118A  22BF  118A   	fcall	_show_LED3
   656                           
   657                           ;main.c: 73:             } else {
   658  0487  2C8F               	goto	l1424
   659  0488                     l1422:	
   660                           
   661                           ;main.c: 74:                 draw_to_LED(temp);
   662  0488  083A               	movf	_temp+1,w
   663  0489  00A5               	movwf	draw_to_LED@i+1
   664  048A  0839               	movf	_temp,w
   665  048B  00A4               	movwf	draw_to_LED@i
   666  048C  118A  2695  118A   	fcall	_draw_to_LED
   667  048F                     l1424:	
   668                           
   669                           ;main.c: 78:         counter++;
   670  048F  3001               	movlw	1
   671  0490  1283               	bcf	3,5	;RP0=0, select bank0
   672  0491  1303               	bcf	3,6	;RP1=0, select bank0
   673  0492  07B6               	addwf	_counter,f
   674  0493  1803               	skipnc
   675  0494  0AB7               	incf	_counter+1,f
   676  0495  3000               	movlw	0
   677  0496  07B7               	addwf	_counter+1,f
   678  0497                     l1426:	
   679                           
   680                           ;main.c: 79:         if (counter>50) {
   681  0497  0837               	movf	_counter+1,w
   682  0498  3A80               	xorlw	128
   683  0499  00FF               	movwf	btemp+1
   684  049A  3080               	movlw	128
   685  049B  027F               	subwf	btemp+1,w
   686  049C  1D03               	skipz
   687  049D  2CA0               	goto	u615
   688  049E  3033               	movlw	51
   689  049F  0236               	subwf	_counter,w
   690  04A0                     u615:	
   691  04A0  1C03               	skipc
   692  04A1  2CA3               	goto	u611
   693  04A2  2CA4               	goto	u610
   694  04A3                     u611:	
   695  04A3  2C40               	goto	l1406
   696  04A4                     u610:	
   697  04A4                     l1428:	
   698                           
   699                           ;main.c: 80:             temp = get_temp(0);
   700  04A4  3000               	movlw	0
   701  04A5  1283               	bcf	3,5	;RP0=0, select bank0
   702  04A6  1303               	bcf	3,6	;RP1=0, select bank0
   703  04A7  00A4               	movwf	?_get_temp
   704  04A8  00A5               	movwf	?_get_temp+1
   705  04A9  118A  24B7  118A   	fcall	_get_temp
   706  04AC  1283               	bcf	3,5	;RP0=0, select bank0
   707  04AD  1303               	bcf	3,6	;RP1=0, select bank0
   708  04AE  0825               	movf	?_get_temp+1,w
   709  04AF  00BA               	movwf	_temp+1
   710  04B0  0824               	movf	?_get_temp,w
   711  04B1  00B9               	movwf	_temp
   712  04B2                     l1430:	
   713                           
   714                           ;main.c: 81:             counter=0;
   715  04B2  01B6               	clrf	_counter
   716  04B3  01B7               	clrf	_counter+1
   717  04B4  2C40               	goto	l1406
   718  04B5  118A  2800         	ljmp	start
   719  04B7                     __end_of_main:	
   720                           
   721                           	psect	text1
   722  04B7                     __ptext1:	
   723 ;; *************** function _get_temp *****************
   724 ;; Defined at:
   725 ;;		line 64 in file "onewire.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  temperature     2   16[BANK0 ] int 
   730 ;;  temp2           1   21[BANK0 ] unsigned char 
   731 ;;  temp1           1   20[BANK0 ] unsigned char 
   732 ;;  temp_drob       1   19[BANK0 ] unsigned char 
   733 ;;  signloc         1   18[BANK0 ] unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  2    4[BANK0 ] int 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   743 ;;      Params:         0       2       0       0
   744 ;;      Locals:         0       6       0       0
   745 ;;      Temps:          0      10       0       0
   746 ;;      Totals:         0      18       0       0
   747 ;;Total ram usage:       18 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    1
   750 ;; This function calls:
   751 ;;		_RX
   752 ;;		_TX
   753 ;;		___awdiv
   754 ;;		___wmul
   755 ;;		_init_ds
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _get_temp
   763  04B7                     _get_temp:	
   764  04B7                     l1354:	
   765                           ;incstack = 0
   766                           ; Regs used in _get_temp: [wreg+status,2+status,0+pclath+cstack]
   767                           
   768                           
   769                           ;onewire.c: 67:     unsigned char temp2 = 0;
   770  04B7  1283               	bcf	3,5	;RP0=0, select bank0
   771  04B8  1303               	bcf	3,6	;RP1=0, select bank0
   772  04B9  01B5               	clrf	get_temp@temp2
   773  04BA                     l1356:	
   774                           
   775                           ;onewire.c: 68:     unsigned char temp_drob;;onewire.c: 69:     signed int temperature;;
      +                          onewire.c: 70:     unsigned char signloc;;onewire.c: 72:     init = init_ds() & 0b000000
      +                          01;
   776  04BA  118A  2314  118A   	fcall	_init_ds
   777  04BD  3901               	andlw	1
   778  04BE  1283               	bcf	3,5	;RP0=0, select bank0
   779  04BF  1303               	bcf	3,6	;RP1=0, select bank0
   780  04C0  00A6               	movwf	??_get_temp
   781  04C1  0826               	movf	??_get_temp,w
   782  04C2  00BB               	movwf	_init
   783  04C3                     l1358:	
   784                           
   785                           ;onewire.c: 73:     if (!init) {
   786  04C3  083B               	movf	_init,w
   787  04C4  1D03               	btfss	3,2
   788  04C5  2CC7               	goto	u531
   789  04C6  2CC8               	goto	u530
   790  04C7                     u531:	
   791  04C7  2D8F               	goto	l79
   792  04C8                     u530:	
   793  04C8                     l1360:	
   794                           
   795                           ;onewire.c: 75:         TX(0xCC);
   796  04C8  30CC               	movlw	204
   797  04C9  118A  2365  118A   	fcall	_TX
   798                           
   799                           ;onewire.c: 76:         TX(0xBE);
   800  04CC  30BE               	movlw	190
   801  04CD  118A  2365  118A   	fcall	_TX
   802                           
   803                           ;onewire.c: 77:         temp1 = RX();
   804  04D0  118A  233A  118A   	fcall	_RX
   805  04D3  1283               	bcf	3,5	;RP0=0, select bank0
   806  04D4  1303               	bcf	3,6	;RP1=0, select bank0
   807  04D5  00A6               	movwf	??_get_temp
   808  04D6  0826               	movf	??_get_temp,w
   809  04D7  00B4               	movwf	get_temp@temp1
   810                           
   811                           ;onewire.c: 78:         temp2 = RX();
   812  04D8  118A  233A  118A   	fcall	_RX
   813  04DB  1283               	bcf	3,5	;RP0=0, select bank0
   814  04DC  1303               	bcf	3,6	;RP1=0, select bank0
   815  04DD  00A6               	movwf	??_get_temp
   816  04DE  0826               	movf	??_get_temp,w
   817  04DF  00B5               	movwf	get_temp@temp2
   818  04E0                     l1362:	
   819                           
   820                           ;onewire.c: 80:         signloc = (temp2 & 0x80) >> 7;
   821  04E0  0835               	movf	get_temp@temp2,w
   822  04E1  00A6               	movwf	??_get_temp
   823  04E2  3007               	movlw	7
   824  04E3                     u545:	
   825  04E3  1003               	clrc
   826  04E4  0CA6               	rrf	??_get_temp,f
   827  04E5  3EFF               	addlw	-1
   828  04E6  1D03               	skipz
   829  04E7  2CE3               	goto	u545
   830  04E8  0826               	movf	??_get_temp,w
   831  04E9  3901               	andlw	1
   832  04EA  00A7               	movwf	??_get_temp+1
   833  04EB  0827               	movf	??_get_temp+1,w
   834  04EC  00B2               	movwf	get_temp@signloc
   835  04ED                     l1364:	
   836                           
   837                           ;onewire.c: 81:         temp_drob = temp1 & 0b00001111;
   838  04ED  0834               	movf	get_temp@temp1,w
   839  04EE  390F               	andlw	15
   840  04EF  00A6               	movwf	??_get_temp
   841  04F0  0826               	movf	??_get_temp,w
   842  04F1  00B3               	movwf	get_temp@temp_drob
   843  04F2                     l1366:	
   844                           
   845                           ;onewire.c: 83:         temp1 >>= 4;
   846  04F2  0EB4               	swapf	get_temp@temp1,f
   847  04F3  300F               	movlw	15
   848  04F4  05B4               	andwf	get_temp@temp1,f
   849  04F5                     l1368:	
   850                           
   851                           ;onewire.c: 84:         temp2 <<= 4;
   852  04F5  0EB5               	swapf	get_temp@temp2,f
   853  04F6  30F0               	movlw	240
   854  04F7  05B5               	andwf	get_temp@temp2,f
   855  04F8                     l1370:	
   856                           
   857                           ;onewire.c: 85:         temp2 &= 0b01110000;
   858  04F8  3070               	movlw	112
   859  04F9  00A6               	movwf	??_get_temp
   860  04FA  0826               	movf	??_get_temp,w
   861  04FB  05B5               	andwf	get_temp@temp2,f
   862  04FC                     l1372:	
   863                           
   864                           ;onewire.c: 86:         temp2 |= temp1;
   865  04FC  0834               	movf	get_temp@temp1,w
   866  04FD  00A6               	movwf	??_get_temp
   867  04FE  0826               	movf	??_get_temp,w
   868  04FF  04B5               	iorwf	get_temp@temp2,f
   869  0500                     l1374:	
   870                           
   871                           ;onewire.c: 87:         nosensor = 0;
   872  0500  01B8               	clrf	_nosensor
   873  0501                     l1376:	
   874                           
   875                           ;onewire.c: 89:         if (signloc == 1) {
   876  0501  0332               	decf	get_temp@signloc,w
   877  0502  1D03               	btfss	3,2
   878  0503  2D05               	goto	u551
   879  0504  2D06               	goto	u550
   880  0505                     u551:	
   881  0505  2D53               	goto	l1382
   882  0506                     u550:	
   883  0506                     l1378:	
   884                           
   885                           ;onewire.c: 90:             return temperature = -((127-temp2)*10 + (10 - temp_drob*10/1
      +                          6));
   886  0506  0835               	movf	get_temp@temp2,w
   887  0507  00A6               	movwf	??_get_temp
   888  0508  01A7               	clrf	??_get_temp+1
   889  0509  0826               	movf	??_get_temp,w
   890  050A  00F0               	movwf	___wmul@multiplier
   891  050B  0827               	movf	??_get_temp+1,w
   892  050C  00F1               	movwf	___wmul@multiplier+1
   893  050D  30F6               	movlw	246
   894  050E  00F2               	movwf	___wmul@multiplicand
   895  050F  30FF               	movlw	255
   896  0510  00F3               	movwf	___wmul@multiplicand+1
   897  0511  118A  22EF  118A   	fcall	___wmul
   898  0514  0870               	movf	?___wmul,w
   899  0515  1283               	bcf	3,5	;RP0=0, select bank0
   900  0516  1303               	bcf	3,6	;RP1=0, select bank0
   901  0517  00A8               	movwf	??_get_temp+2
   902  0518  0871               	movf	?___wmul+1,w
   903  0519  00A9               	movwf	??_get_temp+3
   904  051A  3010               	movlw	16
   905  051B  00F6               	movwf	___awdiv@divisor
   906  051C  3000               	movlw	0
   907  051D  00F7               	movwf	___awdiv@divisor+1
   908  051E  0833               	movf	get_temp@temp_drob,w
   909  051F  00AA               	movwf	??_get_temp+4
   910  0520  01AB               	clrf	??_get_temp+5
   911  0521  082A               	movf	??_get_temp+4,w
   912  0522  00F0               	movwf	___wmul@multiplier
   913  0523  082B               	movf	??_get_temp+5,w
   914  0524  00F1               	movwf	___wmul@multiplier+1
   915  0525  300A               	movlw	10
   916  0526  00F2               	movwf	___wmul@multiplicand
   917  0527  3000               	movlw	0
   918  0528  00F3               	movwf	___wmul@multiplicand+1
   919  0529  118A  22EF  118A   	fcall	___wmul
   920  052C  0871               	movf	?___wmul+1,w
   921  052D  00F9               	movwf	___awdiv@dividend+1
   922  052E  0870               	movf	?___wmul,w
   923  052F  00F8               	movwf	___awdiv@dividend
   924  0530  118A  23B4  118A   	fcall	___awdiv
   925  0533  0876               	movf	?___awdiv,w
   926  0534  1283               	bcf	3,5	;RP0=0, select bank0
   927  0535  1303               	bcf	3,6	;RP1=0, select bank0
   928  0536  0228               	subwf	??_get_temp+2,w
   929  0537  00AC               	movwf	??_get_temp+6
   930  0538  0877               	movf	?___awdiv+1,w
   931  0539  1C03               	skipc
   932  053A  0A77               	incf	?___awdiv+1,w
   933  053B  0229               	subwf	??_get_temp+3,w
   934  053C  00AD               	movwf	??_get_temp+7
   935  053D  082C               	movf	??_get_temp+6,w
   936  053E  3E00               	addlw	0
   937  053F  00AE               	movwf	??_get_temp+8
   938  0540  082D               	movf	??_get_temp+7,w
   939  0541  1803               	skipnc
   940  0542  3E01               	addlw	1
   941  0543  3E05               	addlw	5
   942  0544  00AF               	movwf	??_get_temp+9
   943  0545  09AE               	comf	??_get_temp+8,f
   944  0546  09AF               	comf	??_get_temp+9,f
   945  0547  0AAE               	incf	??_get_temp+8,f
   946  0548  1903               	skipnz
   947  0549  0AAF               	incf	??_get_temp+9,f
   948  054A  082E               	movf	??_get_temp+8,w
   949  054B  00B0               	movwf	get_temp@temperature
   950  054C  082F               	movf	??_get_temp+9,w
   951  054D  00B1               	movwf	get_temp@temperature+1
   952  054E  0831               	movf	get_temp@temperature+1,w
   953  054F  00A5               	movwf	?_get_temp+1
   954  0550  0830               	movf	get_temp@temperature,w
   955  0551  00A4               	movwf	?_get_temp
   956  0552  2D93               	goto	l81
   957  0553                     l1382:	
   958                           
   959                           ;onewire.c: 92:         return temperature = temp2*10 + temp_drob*10/16;
   960  0553  0835               	movf	get_temp@temp2,w
   961  0554  00A6               	movwf	??_get_temp
   962  0555  01A7               	clrf	??_get_temp+1
   963  0556  0826               	movf	??_get_temp,w
   964  0557  00F0               	movwf	___wmul@multiplier
   965  0558  0827               	movf	??_get_temp+1,w
   966  0559  00F1               	movwf	___wmul@multiplier+1
   967  055A  300A               	movlw	10
   968  055B  00F2               	movwf	___wmul@multiplicand
   969  055C  3000               	movlw	0
   970  055D  00F3               	movwf	___wmul@multiplicand+1
   971  055E  118A  22EF  118A   	fcall	___wmul
   972  0561  0870               	movf	?___wmul,w
   973  0562  1283               	bcf	3,5	;RP0=0, select bank0
   974  0563  1303               	bcf	3,6	;RP1=0, select bank0
   975  0564  00A8               	movwf	??_get_temp+2
   976  0565  0871               	movf	?___wmul+1,w
   977  0566  00A9               	movwf	??_get_temp+3
   978  0567  3010               	movlw	16
   979  0568  00F6               	movwf	___awdiv@divisor
   980  0569  3000               	movlw	0
   981  056A  00F7               	movwf	___awdiv@divisor+1
   982  056B  0833               	movf	get_temp@temp_drob,w
   983  056C  00AA               	movwf	??_get_temp+4
   984  056D  01AB               	clrf	??_get_temp+5
   985  056E  082A               	movf	??_get_temp+4,w
   986  056F  00F0               	movwf	___wmul@multiplier
   987  0570  082B               	movf	??_get_temp+5,w
   988  0571  00F1               	movwf	___wmul@multiplier+1
   989  0572  300A               	movlw	10
   990  0573  00F2               	movwf	___wmul@multiplicand
   991  0574  3000               	movlw	0
   992  0575  00F3               	movwf	___wmul@multiplicand+1
   993  0576  118A  22EF  118A   	fcall	___wmul
   994  0579  0871               	movf	?___wmul+1,w
   995  057A  00F9               	movwf	___awdiv@dividend+1
   996  057B  0870               	movf	?___wmul,w
   997  057C  00F8               	movwf	___awdiv@dividend
   998  057D  118A  23B4  118A   	fcall	___awdiv
   999  0580  0876               	movf	?___awdiv,w
  1000  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0583  0728               	addwf	??_get_temp+2,w
  1003  0584  00B0               	movwf	get_temp@temperature
  1004  0585  0877               	movf	?___awdiv+1,w
  1005  0586  1803               	skipnc
  1006  0587  0A77               	incf	?___awdiv+1,w
  1007  0588  0729               	addwf	??_get_temp+3,w
  1008  0589  00B1               	movwf	get_temp@temperature+1
  1009  058A  0831               	movf	get_temp@temperature+1,w
  1010  058B  00A5               	movwf	?_get_temp+1
  1011  058C  0830               	movf	get_temp@temperature,w
  1012  058D  00A4               	movwf	?_get_temp
  1013  058E  2D93               	goto	l81
  1014  058F                     l79:	
  1015                           
  1016                           ;onewire.c: 94:         nosensor = 1;
  1017  058F  01B8               	clrf	_nosensor
  1018  0590  0AB8               	incf	_nosensor,f
  1019  0591                     l1388:	
  1020                           
  1021                           ;onewire.c: 95:         return 0;
  1022  0591  01A4               	clrf	?_get_temp
  1023  0592  01A5               	clrf	?_get_temp+1
  1024  0593                     l81:	
  1025  0593  0008               	return
  1026  0594                     __end_of_get_temp:	
  1027                           
  1028                           	psect	text2
  1029  0314                     __ptext2:	
  1030 ;; *************** function _init_ds *****************
  1031 ;; Defined at:
  1032 ;;		line 10 in file "onewire.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  control0        1    0        unsigned char 
  1037 ;;  b               1    1[COMMON] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      unsigned char 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1047 ;;      Params:         0       0       0       0
  1048 ;;      Locals:         2       0       0       0
  1049 ;;      Temps:          1       0       0       0
  1050 ;;      Totals:         3       0       0       0
  1051 ;;Total ram usage:        3 bytes
  1052 ;; Hardware stack levels used:    1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;;		_get_temp
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           
  1062                           ;psect for function _init_ds
  1063  0314                     _init_ds:	
  1064  0314                     l1136:	
  1065                           ;incstack = 0
  1066                           ; Regs used in _init_ds: [wreg+status,2+status,0]
  1067                           
  1068  0314                     l1138:	
  1069                           
  1070                           ;onewire.c: 14:     TRISA &= control0;
  1071  0314  30FE               	movlw	254
  1072  0315  00F0               	movwf	??_init_ds
  1073  0316  0870               	movf	??_init_ds,w
  1074  0317  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0318  1303               	bcf	3,6	;RP1=0, select bank1
  1076  0319  0585               	andwf	5,f	;volatile
  1077  031A                     l1140:	
  1078                           
  1079                           ;onewire.c: 15:     PORTA &= control0;
  1080  031A  30FE               	movlw	254
  1081  031B  00F0               	movwf	??_init_ds
  1082  031C  0870               	movf	??_init_ds,w
  1083  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1084  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1085  031F  0585               	andwf	5,f	;volatile
  1086                           
  1087                           ;onewire.c: 16:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  1088  0320  30A6               	movlw	166
  1089  0321  00F0               	movwf	??_init_ds
  1090  0322                     u637:	
  1091  0322  0BF0               	decfsz	??_init_ds,f
  1092  0323  2B22               	goto	u637
  1093  0324  0000               	nop
  1094  0325                     l1142:	
  1095                           
  1096                           ;onewire.c: 17:     TRISA |= ~control0;
  1097  0325  1683               	bsf	3,5	;RP0=1, select bank1
  1098  0326  1303               	bcf	3,6	;RP1=0, select bank1
  1099  0327  1405               	bsf	5,0	;volatile
  1100  0328                     l1144:	
  1101                           
  1102                           ;onewire.c: 18:     _delay((unsigned long)((65)*(4000000/4000000.0)));
  1103  0328  3015               	movlw	21
  1104  0329  00F0               	movwf	??_init_ds
  1105  032A                     u647:	
  1106  032A  0BF0               	decfsz	??_init_ds,f
  1107  032B  2B2A               	goto	u647
  1108  032C  0000               	nop
  1109  032D                     l1146:	
  1110                           
  1111                           ;onewire.c: 19:     b = PORTA;
  1112  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1113  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1114  032F  0805               	movf	5,w	;volatile
  1115  0330  00F0               	movwf	??_init_ds
  1116  0331  0870               	movf	??_init_ds,w
  1117  0332  00F1               	movwf	init_ds@b
  1118  0333                     l1148:	
  1119                           
  1120                           ;onewire.c: 20:     _delay((unsigned long)((450)*(4000000/4000000.0)));
  1121  0333  3095               	movlw	149
  1122  0334  00F0               	movwf	??_init_ds
  1123  0335                     u657:	
  1124  0335  0BF0               	decfsz	??_init_ds,f
  1125  0336  2B35               	goto	u657
  1126  0337  2B38               	nop2
  1127  0338                     l1150:	
  1128                           
  1129                           ;onewire.c: 21:     return b;
  1130  0338  0871               	movf	init_ds@b,w
  1131  0339                     l63:	
  1132  0339  0008               	return
  1133  033A                     __end_of_init_ds:	
  1134                           
  1135                           	psect	text3
  1136  0365                     __ptext3:	
  1137 ;; *************** function _TX *****************
  1138 ;; Defined at:
  1139 ;;		line 24 in file "onewire.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  cmd             1    wreg     unsigned char 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  cmd             1    1[COMMON] unsigned char 
  1144 ;;  control0        1    4[COMMON] unsigned char 
  1145 ;;  i               1    3[COMMON] unsigned char 
  1146 ;;  temp            1    2[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, status,0
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1156 ;;      Params:         0       0       0       0
  1157 ;;      Locals:         4       0       0       0
  1158 ;;      Temps:          1       0       0       0
  1159 ;;      Totals:         5       0       0       0
  1160 ;;Total ram usage:        5 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;;		_get_temp
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _TX
  1172  0365                     _TX:	
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _TX: [wreg+status,2+status,0]
  1176                           ;TX@cmd stored from wreg
  1177  0365  00F1               	movwf	TX@cmd
  1178  0366                     l1154:	
  1179                           
  1180                           ;onewire.c: 26:     unsigned char i = 0;
  1181  0366  01F3               	clrf	TX@i
  1182  0367                     l1156:	
  1183                           
  1184                           ;onewire.c: 27:     unsigned char control0 = 0b11111110;
  1185  0367  30FE               	movlw	254
  1186  0368  00F0               	movwf	??_TX
  1187  0369  0870               	movf	??_TX,w
  1188  036A  00F4               	movwf	TX@control0
  1189  036B                     l1158:	
  1190                           
  1191                           ;onewire.c: 28:     temp = cmd;
  1192  036B  0871               	movf	TX@cmd,w
  1193  036C  00F0               	movwf	??_TX
  1194  036D  0870               	movf	??_TX,w
  1195  036E  00F2               	movwf	TX@temp
  1196                           
  1197                           ;onewire.c: 29:     for (i=0;i<8;i++) {
  1198  036F  01F3               	clrf	TX@i
  1199  0370                     l66:	
  1200                           
  1201                           ;onewire.c: 30:         if (temp&0x01) {
  1202  0370  1C72               	btfss	TX@temp,0
  1203  0371  2B73               	goto	u321
  1204  0372  2B74               	goto	u320
  1205  0373                     u321:	
  1206  0373  2B8E               	goto	l1170
  1207  0374                     u320:	
  1208  0374                     l1164:	
  1209                           
  1210                           ;onewire.c: 31:             TRISA &= control0;
  1211  0374  0874               	movf	TX@control0,w	;volatile
  1212  0375  00F0               	movwf	??_TX
  1213  0376  0870               	movf	??_TX,w
  1214  0377  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0378  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0379  0585               	andwf	5,f	;volatile
  1217                           
  1218                           ;onewire.c: 32:             PORTA &= control0;
  1219  037A  0874               	movf	TX@control0,w	;volatile
  1220  037B  00F0               	movwf	??_TX
  1221  037C  0870               	movf	??_TX,w
  1222  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1223  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1224  037F  0585               	andwf	5,f	;volatile
  1225  0380                     l1166:	
  1226                           
  1227                           ;onewire.c: 33:             _delay((unsigned long)((5)*(4000000/4000000.0)));
  1228  0380  2B81               	nop2	;2 cycle nop
  1229  0381  2B82               	nop2	;2 cycle nop
  1230  0382  0000               	nop
  1231                           
  1232                           ;onewire.c: 34:             TRISA |= ~control0;
  1233  0383  0974               	comf	TX@control0,w	;volatile
  1234  0384  00F0               	movwf	??_TX
  1235  0385  0870               	movf	??_TX,w
  1236  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0388  0485               	iorwf	5,f	;volatile
  1239  0389                     l1168:	
  1240                           
  1241                           ;onewire.c: 35:             _delay((unsigned long)((70)*(4000000/4000000.0)));
  1242  0389  3017               	movlw	23
  1243  038A  00F0               	movwf	??_TX
  1244  038B                     u667:	
  1245  038B  0BF0               	decfsz	??_TX,f
  1246  038C  2B8B               	goto	u667
  1247                           
  1248                           ;onewire.c: 36:         } else {
  1249  038D  2BA7               	goto	l69
  1250  038E                     l1170:	
  1251                           
  1252                           ;onewire.c: 37:             TRISA &= control0;
  1253  038E  0874               	movf	TX@control0,w	;volatile
  1254  038F  00F0               	movwf	??_TX
  1255  0390  0870               	movf	??_TX,w
  1256  0391  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0392  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0393  0585               	andwf	5,f	;volatile
  1259                           
  1260                           ;onewire.c: 38:             PORTA &= control0;
  1261  0394  0874               	movf	TX@control0,w	;volatile
  1262  0395  00F0               	movwf	??_TX
  1263  0396  0870               	movf	??_TX,w
  1264  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0399  0585               	andwf	5,f	;volatile
  1267  039A                     l1172:	
  1268                           
  1269                           ;onewire.c: 39:             _delay((unsigned long)((70)*(4000000/4000000.0)));
  1270  039A  3017               	movlw	23
  1271  039B  00F0               	movwf	??_TX
  1272  039C                     u677:	
  1273  039C  0BF0               	decfsz	??_TX,f
  1274  039D  2B9C               	goto	u677
  1275  039E                     l1174:	
  1276                           
  1277                           ;onewire.c: 40:             TRISA |= ~control0;
  1278  039E  0974               	comf	TX@control0,w	;volatile
  1279  039F  00F0               	movwf	??_TX
  1280  03A0  0870               	movf	??_TX,w
  1281  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  1282  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  1283  03A3  0485               	iorwf	5,f	;volatile
  1284  03A4                     l1176:	
  1285                           
  1286                           ;onewire.c: 41:             _delay((unsigned long)((5)*(4000000/4000000.0)));
  1287  03A4  2BA5               	nop2	;2 cycle nop
  1288  03A5  2BA6               	nop2	;2 cycle nop
  1289  03A6  0000               	nop
  1290  03A7                     l69:	
  1291                           ;onewire.c: 43:         }
  1292                           
  1293                           
  1294                           ;onewire.c: 44:         temp >>= 1;
  1295  03A7  1003               	clrc
  1296  03A8  0CF2               	rrf	TX@temp,f
  1297  03A9                     l1178:	
  1298                           
  1299                           ;onewire.c: 45:     }
  1300  03A9  3001               	movlw	1
  1301  03AA  00F0               	movwf	??_TX
  1302  03AB  0870               	movf	??_TX,w
  1303  03AC  07F3               	addwf	TX@i,f
  1304  03AD                     l1180:	
  1305  03AD  3008               	movlw	8
  1306  03AE  0273               	subwf	TX@i,w
  1307  03AF  1C03               	skipc
  1308  03B0  2BB2               	goto	u331
  1309  03B1  2BB3               	goto	u330
  1310  03B2                     u331:	
  1311  03B2  2B70               	goto	l66
  1312  03B3                     u330:	
  1313  03B3                     l70:	
  1314  03B3  0008               	return
  1315  03B4                     __end_of_TX:	
  1316                           
  1317                           	psect	text4
  1318  033A                     __ptext4:	
  1319 ;; *************** function _RX *****************
  1320 ;; Defined at:
  1321 ;;		line 48 in file "onewire.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  i               1    2[COMMON] unsigned char 
  1326 ;;  d               1    1[COMMON] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      unsigned char 
  1329 ;; Registers used:
  1330 ;;		wreg, status,2, status,0
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1336 ;;      Params:         0       0       0       0
  1337 ;;      Locals:         2       0       0       0
  1338 ;;      Temps:          1       0       0       0
  1339 ;;      Totals:         3       0       0       0
  1340 ;;Total ram usage:        3 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_get_temp
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _RX
  1351  033A                     _RX:	
  1352  033A                     l1206:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _RX: [wreg+status,2+status,0]
  1355                           
  1356                           
  1357                           ;onewire.c: 49:     unsigned char d = 0;
  1358  033A  01F1               	clrf	RX@d
  1359                           
  1360                           ;onewire.c: 50:     unsigned char i = 0;
  1361  033B  01F2               	clrf	RX@i
  1362                           
  1363                           ;onewire.c: 51:     for (i=0;i<8;i++){
  1364  033C  01F2               	clrf	RX@i
  1365  033D                     l73:	
  1366                           
  1367                           ;onewire.c: 52:         TRISA0 = 0;
  1368  033D  1683               	bsf	3,5	;RP0=1, select bank1
  1369  033E  1303               	bcf	3,6	;RP1=0, select bank1
  1370  033F  1005               	bcf	5,0	;volatile
  1371                           
  1372                           ;onewire.c: 53:         RA0 = 0;
  1373  0340  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0341  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0342  1005               	bcf	5,0	;volatile
  1376                           
  1377                           ;onewire.c: 54:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1378  0343  2B44               	nop2	;2 cycle nop
  1379  0344  2B45               	nop2	;2 cycle nop
  1380  0345  0000               	nop
  1381                           
  1382                           ;onewire.c: 55:         TRISA0 = 1;
  1383  0346  1683               	bsf	3,5	;RP0=1, select bank1
  1384  0347  1303               	bcf	3,6	;RP1=0, select bank1
  1385  0348  1405               	bsf	5,0	;volatile
  1386                           
  1387                           ;onewire.c: 56:         _delay((unsigned long)((4)*(4000000/4000000.0)));
  1388  0349  2B4A               	nop2	;2 cycle nop
  1389  034A  2B4B               	nop2	;2 cycle nop
  1390  034B                     l1212:	
  1391                           
  1392                           ;onewire.c: 57:         d>>=1;
  1393  034B  1003               	clrc
  1394  034C  0CF1               	rrf	RX@d,f
  1395  034D                     l1214:	
  1396                           
  1397                           ;onewire.c: 58:         if (RA0 == 1) d |= 0x80;
  1398  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1399  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1400  034F  1C05               	btfss	5,0	;volatile
  1401  0350  2B52               	goto	u341
  1402  0351  2B53               	goto	u340
  1403  0352                     u341:	
  1404  0352  2B54               	goto	l1218
  1405  0353                     u340:	
  1406  0353                     l1216:	
  1407  0353  17F1               	bsf	RX@d,7
  1408  0354                     l1218:	
  1409                           
  1410                           ;onewire.c: 59:         _delay((unsigned long)((60)*(4000000/4000000.0)));
  1411  0354  3013               	movlw	19
  1412  0355  00F0               	movwf	??_RX
  1413  0356                     u687:	
  1414  0356  0BF0               	decfsz	??_RX,f
  1415  0357  2B56               	goto	u687
  1416  0358  2B59               	nop2
  1417  0359                     l1220:	
  1418                           
  1419                           ;onewire.c: 60:     };
  1420  0359  3001               	movlw	1
  1421  035A  00F0               	movwf	??_RX
  1422  035B  0870               	movf	??_RX,w
  1423  035C  07F2               	addwf	RX@i,f
  1424  035D                     l1222:	
  1425  035D  3008               	movlw	8
  1426  035E  0272               	subwf	RX@i,w
  1427  035F  1C03               	skipc
  1428  0360  2B62               	goto	u351
  1429  0361  2B63               	goto	u350
  1430  0362                     u351:	
  1431  0362  2B3D               	goto	l73
  1432  0363                     u350:	
  1433  0363                     l1224:	
  1434                           
  1435                           ;onewire.c: 61:     return d;
  1436  0363  0871               	movf	RX@d,w
  1437  0364                     l76:	
  1438  0364  0008               	return
  1439  0365                     __end_of_RX:	
  1440                           
  1441                           	psect	text5
  1442  0695                     __ptext5:	
  1443 ;; *************** function _draw_to_LED *****************
  1444 ;; Defined at:
  1445 ;;		line 245 in file "7-segment-x-3.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  i               2    4[BANK0 ] int 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  d               2    6[BANK0 ] int 
  1450 ;;  d               2    8[BANK0 ] int 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1460 ;;      Params:         0       2       0       0
  1461 ;;      Locals:         0       4       0       0
  1462 ;;      Temps:          2       0       0       0
  1463 ;;      Totals:         2       6       0       0
  1464 ;;Total ram usage:        8 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		___awdiv
  1469 ;;		___wmul
  1470 ;;		_show_LED1
  1471 ;;		_show_LED2
  1472 ;;		_show_LED3
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _draw_to_LED
  1480  0695                     _draw_to_LED:	
  1481  0695                     l1296:	
  1482                           ;incstack = 0
  1483                           ; Regs used in _draw_to_LED: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1484                           
  1485  0695  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0696  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0697  1BA5               	btfsc	draw_to_LED@i+1,7
  1488  0698  2E9A               	goto	u501
  1489  0699  2E9B               	goto	u500
  1490  069A                     u501:	
  1491  069A  2F24               	goto	l1316
  1492  069B                     u500:	
  1493  069B                     l1298:	
  1494  069B  3064               	movlw	100
  1495  069C  00F6               	movwf	___awdiv@divisor
  1496  069D  3000               	movlw	0
  1497  069E  00F7               	movwf	___awdiv@divisor+1
  1498  069F  0825               	movf	draw_to_LED@i+1,w
  1499  06A0  00F9               	movwf	___awdiv@dividend+1
  1500  06A1  0824               	movf	draw_to_LED@i,w
  1501  06A2  00F8               	movwf	___awdiv@dividend
  1502  06A3  118A  23B4  118A   	fcall	___awdiv
  1503  06A6  0877               	movf	?___awdiv+1,w
  1504  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1505  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1506  06A9  00A7               	movwf	draw_to_LED@d_135+1
  1507  06AA  0876               	movf	?___awdiv,w
  1508  06AB  00A6               	movwf	draw_to_LED@d_135
  1509  06AC                     l1300:	
  1510  06AC  0827               	movf	draw_to_LED@d_135+1,w
  1511  06AD  3A80               	xorlw	128
  1512  06AE  00FF               	movwf	btemp+1
  1513  06AF  3080               	movlw	128
  1514  06B0  027F               	subwf	btemp+1,w
  1515  06B1  1D03               	skipz
  1516  06B2  2EB5               	goto	u515
  1517  06B3  3001               	movlw	1
  1518  06B4  0226               	subwf	draw_to_LED@d_135,w
  1519  06B5                     u515:	
  1520  06B5  1C03               	skipc
  1521  06B6  2EB8               	goto	u511
  1522  06B7  2EB9               	goto	u510
  1523  06B8                     u511:	
  1524  06B8  2EC0               	goto	l1304
  1525  06B9                     u510:	
  1526  06B9                     l1302:	
  1527  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1528  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1529  06BB  0826               	movf	draw_to_LED@d_135,w
  1530  06BC  118A  2295  118A   	fcall	_show_LED1
  1531  06BF  2EC4               	goto	l1306
  1532  06C0                     l1304:	
  1533  06C0  3010               	movlw	16
  1534  06C1  118A  2295  118A   	fcall	_show_LED1
  1535  06C4                     l1306:	
  1536  06C4  300A               	movlw	10
  1537  06C5  00F6               	movwf	___awdiv@divisor
  1538  06C6  3000               	movlw	0
  1539  06C7  00F7               	movwf	___awdiv@divisor+1
  1540  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1541  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1542  06CA  0825               	movf	draw_to_LED@i+1,w
  1543  06CB  00F9               	movwf	___awdiv@dividend+1
  1544  06CC  0824               	movf	draw_to_LED@i,w
  1545  06CD  00F8               	movwf	___awdiv@dividend
  1546  06CE  118A  23B4  118A   	fcall	___awdiv
  1547  06D1  0876               	movf	?___awdiv,w
  1548  06D2  00FB               	movwf	??_draw_to_LED
  1549  06D3  0877               	movf	?___awdiv+1,w
  1550  06D4  00FC               	movwf	??_draw_to_LED+1
  1551  06D5  3064               	movlw	100
  1552  06D6  00F6               	movwf	___awdiv@divisor
  1553  06D7  3000               	movlw	0
  1554  06D8  00F7               	movwf	___awdiv@divisor+1
  1555  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1556  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1557  06DB  0825               	movf	draw_to_LED@i+1,w
  1558  06DC  00F9               	movwf	___awdiv@dividend+1
  1559  06DD  0824               	movf	draw_to_LED@i,w
  1560  06DE  00F8               	movwf	___awdiv@dividend
  1561  06DF  118A  23B4  118A   	fcall	___awdiv
  1562  06E2  0877               	movf	?___awdiv+1,w
  1563  06E3  00F1               	movwf	___wmul@multiplier+1
  1564  06E4  0876               	movf	?___awdiv,w
  1565  06E5  00F0               	movwf	___wmul@multiplier
  1566  06E6  30F6               	movlw	246
  1567  06E7  00F2               	movwf	___wmul@multiplicand
  1568  06E8  30FF               	movlw	255
  1569  06E9  00F3               	movwf	___wmul@multiplicand+1
  1570  06EA  118A  22EF  118A   	fcall	___wmul
  1571  06ED  0870               	movf	?___wmul,w
  1572  06EE  077B               	addwf	??_draw_to_LED,w
  1573  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1574  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1575  06F1  00A6               	movwf	draw_to_LED@d_135
  1576  06F2  0871               	movf	?___wmul+1,w
  1577  06F3  1803               	skipnc
  1578  06F4  0A71               	incf	?___wmul+1,w
  1579  06F5  077C               	addwf	??_draw_to_LED+1,w
  1580  06F6  00A7               	movwf	draw_to_LED@d_135+1
  1581  06F7                     l1308:	
  1582  06F7  1786               	bsf	6,7	;volatile
  1583  06F8                     l1310:	
  1584  06F8  0826               	movf	draw_to_LED@d_135,w
  1585  06F9  118A  22AA  118A   	fcall	_show_LED2
  1586  06FC                     l1312:	
  1587  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1588  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1589  06FE  1386               	bcf	6,7	;volatile
  1590  06FF  300A               	movlw	10
  1591  0700  00F6               	movwf	___awdiv@divisor
  1592  0701  3000               	movlw	0
  1593  0702  00F7               	movwf	___awdiv@divisor+1
  1594  0703  0825               	movf	draw_to_LED@i+1,w
  1595  0704  00F9               	movwf	___awdiv@dividend+1
  1596  0705  0824               	movf	draw_to_LED@i,w
  1597  0706  00F8               	movwf	___awdiv@dividend
  1598  0707  118A  23B4  118A   	fcall	___awdiv
  1599  070A  0877               	movf	?___awdiv+1,w
  1600  070B  00F1               	movwf	___wmul@multiplier+1
  1601  070C  0876               	movf	?___awdiv,w
  1602  070D  00F0               	movwf	___wmul@multiplier
  1603  070E  30F6               	movlw	246
  1604  070F  00F2               	movwf	___wmul@multiplicand
  1605  0710  30FF               	movlw	255
  1606  0711  00F3               	movwf	___wmul@multiplicand+1
  1607  0712  118A  22EF  118A   	fcall	___wmul
  1608  0715  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0716  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0717  0824               	movf	draw_to_LED@i,w
  1611  0718  0770               	addwf	?___wmul,w
  1612  0719  00A6               	movwf	draw_to_LED@d_135
  1613  071A  0825               	movf	draw_to_LED@i+1,w
  1614  071B  1803               	skipnc
  1615  071C  0A25               	incf	draw_to_LED@i+1,w
  1616  071D  0771               	addwf	?___wmul+1,w
  1617  071E  00A7               	movwf	draw_to_LED@d_135+1
  1618  071F                     l1314:	
  1619  071F  0826               	movf	draw_to_LED@d_135,w
  1620  0720  118A  22BF  118A   	fcall	_show_LED3
  1621  0723  2FE7               	goto	l1338
  1622  0724                     l1316:	
  1623  0724  309C               	movlw	156
  1624  0725  00F6               	movwf	___awdiv@divisor
  1625  0726  30FF               	movlw	255
  1626  0727  00F7               	movwf	___awdiv@divisor+1
  1627  0728  0825               	movf	draw_to_LED@i+1,w
  1628  0729  00F9               	movwf	___awdiv@dividend+1
  1629  072A  0824               	movf	draw_to_LED@i,w
  1630  072B  00F8               	movwf	___awdiv@dividend
  1631  072C  118A  23B4  118A   	fcall	___awdiv
  1632  072F  0877               	movf	?___awdiv+1,w
  1633  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1634  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1635  0732  00A9               	movwf	draw_to_LED@d+1
  1636  0733  0876               	movf	?___awdiv,w
  1637  0734  00A8               	movwf	draw_to_LED@d
  1638  0735                     l1318:	
  1639  0735  0829               	movf	draw_to_LED@d+1,w
  1640  0736  3A80               	xorlw	128
  1641  0737  00FF               	movwf	btemp+1
  1642  0738  3080               	movlw	128
  1643  0739  027F               	subwf	btemp+1,w
  1644  073A  1D03               	skipz
  1645  073B  2F3E               	goto	u525
  1646  073C  3001               	movlw	1
  1647  073D  0228               	subwf	draw_to_LED@d,w
  1648  073E                     u525:	
  1649  073E  1C03               	skipc
  1650  073F  2F41               	goto	u521
  1651  0740  2F42               	goto	u520
  1652  0741                     u521:	
  1653  0741  2F84               	goto	l1326
  1654  0742                     u520:	
  1655  0742                     l1320:	
  1656  0742  3011               	movlw	17
  1657  0743  118A  2295  118A   	fcall	_show_LED1
  1658  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0748  0828               	movf	draw_to_LED@d,w
  1661  0749  118A  22AA  118A   	fcall	_show_LED2
  1662  074C                     l1322:	
  1663  074C  3064               	movlw	100
  1664  074D  00F6               	movwf	___awdiv@divisor
  1665  074E  3000               	movlw	0
  1666  074F  00F7               	movwf	___awdiv@divisor+1
  1667  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0752  0825               	movf	draw_to_LED@i+1,w
  1670  0753  00F9               	movwf	___awdiv@dividend+1
  1671  0754  0824               	movf	draw_to_LED@i,w
  1672  0755  00F8               	movwf	___awdiv@dividend
  1673  0756  118A  23B4  118A   	fcall	___awdiv
  1674  0759  0877               	movf	?___awdiv+1,w
  1675  075A  00F1               	movwf	___wmul@multiplier+1
  1676  075B  0876               	movf	?___awdiv,w
  1677  075C  00F0               	movwf	___wmul@multiplier
  1678  075D  300A               	movlw	10
  1679  075E  00F2               	movwf	___wmul@multiplicand
  1680  075F  3000               	movlw	0
  1681  0760  00F3               	movwf	___wmul@multiplicand+1
  1682  0761  118A  22EF  118A   	fcall	___wmul
  1683  0764  0870               	movf	?___wmul,w
  1684  0765  00FB               	movwf	??_draw_to_LED
  1685  0766  0871               	movf	?___wmul+1,w
  1686  0767  00FC               	movwf	??_draw_to_LED+1
  1687  0768  30F6               	movlw	246
  1688  0769  00F6               	movwf	___awdiv@divisor
  1689  076A  30FF               	movlw	255
  1690  076B  00F7               	movwf	___awdiv@divisor+1
  1691  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1692  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1693  076E  0825               	movf	draw_to_LED@i+1,w
  1694  076F  00F9               	movwf	___awdiv@dividend+1
  1695  0770  0824               	movf	draw_to_LED@i,w
  1696  0771  00F8               	movwf	___awdiv@dividend
  1697  0772  118A  23B4  118A   	fcall	___awdiv
  1698  0775  0876               	movf	?___awdiv,w
  1699  0776  077B               	addwf	??_draw_to_LED,w
  1700  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0779  00A8               	movwf	draw_to_LED@d
  1703  077A  0877               	movf	?___awdiv+1,w
  1704  077B  1803               	skipnc
  1705  077C  0A77               	incf	?___awdiv+1,w
  1706  077D  077C               	addwf	??_draw_to_LED+1,w
  1707  077E  00A9               	movwf	draw_to_LED@d+1
  1708  077F                     l1324:	
  1709  077F  0828               	movf	draw_to_LED@d,w
  1710  0780  118A  22BF  118A   	fcall	_show_LED3
  1711  0783  2FE7               	goto	l1338
  1712  0784                     l1326:	
  1713  0784  3011               	movlw	17
  1714  0785  118A  2295  118A   	fcall	_show_LED1
  1715  0788                     l1328:	
  1716  0788  3064               	movlw	100
  1717  0789  00F6               	movwf	___awdiv@divisor
  1718  078A  3000               	movlw	0
  1719  078B  00F7               	movwf	___awdiv@divisor+1
  1720  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1721  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1722  078E  0825               	movf	draw_to_LED@i+1,w
  1723  078F  00F9               	movwf	___awdiv@dividend+1
  1724  0790  0824               	movf	draw_to_LED@i,w
  1725  0791  00F8               	movwf	___awdiv@dividend
  1726  0792  118A  23B4  118A   	fcall	___awdiv
  1727  0795  0877               	movf	?___awdiv+1,w
  1728  0796  00F1               	movwf	___wmul@multiplier+1
  1729  0797  0876               	movf	?___awdiv,w
  1730  0798  00F0               	movwf	___wmul@multiplier
  1731  0799  300A               	movlw	10
  1732  079A  00F2               	movwf	___wmul@multiplicand
  1733  079B  3000               	movlw	0
  1734  079C  00F3               	movwf	___wmul@multiplicand+1
  1735  079D  118A  22EF  118A   	fcall	___wmul
  1736  07A0  0870               	movf	?___wmul,w
  1737  07A1  00FB               	movwf	??_draw_to_LED
  1738  07A2  0871               	movf	?___wmul+1,w
  1739  07A3  00FC               	movwf	??_draw_to_LED+1
  1740  07A4  30F6               	movlw	246
  1741  07A5  00F6               	movwf	___awdiv@divisor
  1742  07A6  30FF               	movlw	255
  1743  07A7  00F7               	movwf	___awdiv@divisor+1
  1744  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1745  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1746  07AA  0825               	movf	draw_to_LED@i+1,w
  1747  07AB  00F9               	movwf	___awdiv@dividend+1
  1748  07AC  0824               	movf	draw_to_LED@i,w
  1749  07AD  00F8               	movwf	___awdiv@dividend
  1750  07AE  118A  23B4  118A   	fcall	___awdiv
  1751  07B1  0876               	movf	?___awdiv,w
  1752  07B2  077B               	addwf	??_draw_to_LED,w
  1753  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1754  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1755  07B5  00A8               	movwf	draw_to_LED@d
  1756  07B6  0877               	movf	?___awdiv+1,w
  1757  07B7  1803               	skipnc
  1758  07B8  0A77               	incf	?___awdiv+1,w
  1759  07B9  077C               	addwf	??_draw_to_LED+1,w
  1760  07BA  00A9               	movwf	draw_to_LED@d+1
  1761  07BB                     l1330:	
  1762  07BB  1786               	bsf	6,7	;volatile
  1763  07BC                     l1332:	
  1764  07BC  0828               	movf	draw_to_LED@d,w
  1765  07BD  118A  22AA  118A   	fcall	_show_LED2
  1766  07C0                     l1334:	
  1767  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  1768  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  1769  07C2  1386               	bcf	6,7	;volatile
  1770  07C3  300A               	movlw	10
  1771  07C4  00F6               	movwf	___awdiv@divisor
  1772  07C5  3000               	movlw	0
  1773  07C6  00F7               	movwf	___awdiv@divisor+1
  1774  07C7  0825               	movf	draw_to_LED@i+1,w
  1775  07C8  00F9               	movwf	___awdiv@dividend+1
  1776  07C9  0824               	movf	draw_to_LED@i,w
  1777  07CA  00F8               	movwf	___awdiv@dividend
  1778  07CB  118A  23B4  118A   	fcall	___awdiv
  1779  07CE  0877               	movf	?___awdiv+1,w
  1780  07CF  00F1               	movwf	___wmul@multiplier+1
  1781  07D0  0876               	movf	?___awdiv,w
  1782  07D1  00F0               	movwf	___wmul@multiplier
  1783  07D2  300A               	movlw	10
  1784  07D3  00F2               	movwf	___wmul@multiplicand
  1785  07D4  3000               	movlw	0
  1786  07D5  00F3               	movwf	___wmul@multiplicand+1
  1787  07D6  118A  22EF  118A   	fcall	___wmul
  1788  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1789  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1790  07DB  0824               	movf	draw_to_LED@i,w
  1791  07DC  0270               	subwf	?___wmul,w
  1792  07DD  00A8               	movwf	draw_to_LED@d
  1793  07DE  0825               	movf	draw_to_LED@i+1,w
  1794  07DF  1C03               	skipc
  1795  07E0  0A25               	incf	draw_to_LED@i+1,w
  1796  07E1  0271               	subwf	?___wmul+1,w
  1797  07E2  00A9               	movwf	draw_to_LED@d+1
  1798  07E3                     l1336:	
  1799  07E3  0828               	movf	draw_to_LED@d,w
  1800  07E4  118A  22BF  118A   	fcall	_show_LED3
  1801  07E7                     l1338:	
  1802  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  1803  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  1804  07E9  1006               	bcf	6,0	;volatile
  1805  07EA                     l1340:	
  1806  07EA  1086               	bcf	6,1	;volatile
  1807  07EB                     l1342:	
  1808  07EB  1106               	bcf	6,2	;volatile
  1809  07EC                     l1344:	
  1810  07EC  1186               	bcf	6,3	;volatile
  1811  07ED                     l1346:	
  1812  07ED  1206               	bcf	6,4	;volatile
  1813  07EE                     l1348:	
  1814  07EE  1286               	bcf	6,5	;volatile
  1815  07EF                     l1350:	
  1816  07EF  1306               	bcf	6,6	;volatile
  1817  07F0                     l1352:	
  1818  07F0  1386               	bcf	6,7	;volatile
  1819  07F1                     l168:	
  1820  07F1  0008               	return
  1821  07F2                     __end_of_draw_to_LED:	
  1822                           
  1823                           	psect	text6
  1824  02BF                     __ptext6:	
  1825 ;; *************** function _show_LED3 *****************
  1826 ;; Defined at:
  1827 ;;		line 194 in file "7-segment-x-3.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  c               1    wreg     unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  c               1    5[COMMON] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1841 ;;      Params:         0       0       0       0
  1842 ;;      Locals:         1       0       0       0
  1843 ;;      Temps:          2       0       0       0
  1844 ;;      Totals:         3       0       0       0
  1845 ;;Total ram usage:        3 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    1
  1848 ;; This function calls:
  1849 ;;		_convert_to_segment
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;;		_draw_to_LED
  1853 ;;		_draw_add
  1854 ;;		_draw_temp
  1855 ;;		_draw_needed_amount
  1856 ;;		_draw_minus
  1857 ;;		_draw_to
  1858 ;;		_draw_hot
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _show_LED3
  1864  02BF                     _show_LED3:	
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _show_LED3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1868                           ;show_LED3@c stored from wreg
  1869  02BF  00F5               	movwf	show_LED3@c
  1870  02C0                     l1198:	
  1871  02C0  0875               	movf	show_LED3@c,w
  1872  02C1  118A  2594  118A   	fcall	_convert_to_segment
  1873  02C4                     l1200:	
  1874  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1875  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1876  02C6  1385               	bcf	5,7	;volatile
  1877  02C7                     l1202:	
  1878  02C7  3008               	movlw	8
  1879  02C8  00F4               	movwf	??_show_LED3+1
  1880  02C9  30C9               	movlw	201
  1881  02CA  00F3               	movwf	??_show_LED3
  1882  02CB                     u697:	
  1883  02CB  0BF3               	decfsz	??_show_LED3,f
  1884  02CC  2ACB               	goto	u697
  1885  02CD  0BF4               	decfsz	??_show_LED3+1,f
  1886  02CE  2ACB               	goto	u697
  1887  02CF  2AD0               	nop2
  1888  02D0                     l1204:	
  1889  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1890  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1891  02D2  1785               	bsf	5,7	;volatile
  1892  02D3                     l139:	
  1893  02D3  0008               	return
  1894  02D4                     __end_of_show_LED3:	
  1895                           
  1896                           	psect	text7
  1897  02AA                     __ptext7:	
  1898 ;; *************** function _show_LED2 *****************
  1899 ;; Defined at:
  1900 ;;		line 187 in file "7-segment-x-3.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  c               1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  c               1    5[COMMON] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1914 ;;      Params:         0       0       0       0
  1915 ;;      Locals:         1       0       0       0
  1916 ;;      Temps:          2       0       0       0
  1917 ;;      Totals:         3       0       0       0
  1918 ;;Total ram usage:        3 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		_convert_to_segment
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;;		_draw_to_LED
  1926 ;;		_draw_add
  1927 ;;		_draw_temp
  1928 ;;		_draw_needed_amount
  1929 ;;		_draw_minus
  1930 ;;		_draw_to
  1931 ;;		_draw_hot
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _show_LED2
  1937  02AA                     _show_LED2:	
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _show_LED2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1941                           ;show_LED2@c stored from wreg
  1942  02AA  00F5               	movwf	show_LED2@c
  1943  02AB                     l1190:	
  1944  02AB  0875               	movf	show_LED2@c,w
  1945  02AC  118A  2594  118A   	fcall	_convert_to_segment
  1946  02AF                     l1192:	
  1947  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1948  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1949  02B1  1305               	bcf	5,6	;volatile
  1950  02B2                     l1194:	
  1951  02B2  3008               	movlw	8
  1952  02B3  00F4               	movwf	??_show_LED2+1
  1953  02B4  30C9               	movlw	201
  1954  02B5  00F3               	movwf	??_show_LED2
  1955  02B6                     u707:	
  1956  02B6  0BF3               	decfsz	??_show_LED2,f
  1957  02B7  2AB6               	goto	u707
  1958  02B8  0BF4               	decfsz	??_show_LED2+1,f
  1959  02B9  2AB6               	goto	u707
  1960  02BA  2ABB               	nop2
  1961  02BB                     l1196:	
  1962  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1963  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1964  02BD  1705               	bsf	5,6	;volatile
  1965  02BE                     l136:	
  1966  02BE  0008               	return
  1967  02BF                     __end_of_show_LED2:	
  1968                           
  1969                           	psect	text8
  1970  0295                     __ptext8:	
  1971 ;; *************** function _show_LED1 *****************
  1972 ;; Defined at:
  1973 ;;		line 180 in file "7-segment-x-3.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  c               1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  c               1    5[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1987 ;;      Params:         0       0       0       0
  1988 ;;      Locals:         1       0       0       0
  1989 ;;      Temps:          2       0       0       0
  1990 ;;      Totals:         3       0       0       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    1
  1994 ;; This function calls:
  1995 ;;		_convert_to_segment
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;;		_draw_to_LED
  1999 ;;		_draw_add
  2000 ;;		_draw_temp
  2001 ;;		_draw_needed_amount
  2002 ;;		_draw_minus
  2003 ;;		_draw_to
  2004 ;;		_draw_hot
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _show_LED1
  2010  0295                     _show_LED1:	
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _show_LED1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2014                           ;show_LED1@c stored from wreg
  2015  0295  00F5               	movwf	show_LED1@c
  2016  0296                     l1182:	
  2017  0296  0875               	movf	show_LED1@c,w
  2018  0297  118A  2594  118A   	fcall	_convert_to_segment
  2019  029A                     l1184:	
  2020  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2021  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2022  029C  1205               	bcf	5,4	;volatile
  2023  029D                     l1186:	
  2024  029D  3008               	movlw	8
  2025  029E  00F4               	movwf	??_show_LED1+1
  2026  029F  30C9               	movlw	201
  2027  02A0  00F3               	movwf	??_show_LED1
  2028  02A1                     u717:	
  2029  02A1  0BF3               	decfsz	??_show_LED1,f
  2030  02A2  2AA1               	goto	u717
  2031  02A3  0BF4               	decfsz	??_show_LED1+1,f
  2032  02A4  2AA1               	goto	u717
  2033  02A5  2AA6               	nop2
  2034  02A6                     l1188:	
  2035  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2036  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2037  02A8  1605               	bsf	5,4	;volatile
  2038  02A9                     l133:	
  2039  02A9  0008               	return
  2040  02AA                     __end_of_show_LED1:	
  2041                           
  2042                           	psect	text9
  2043  0594                     __ptext9:	
  2044 ;; *************** function _convert_to_segment *****************
  2045 ;; Defined at:
  2046 ;;		line 4 in file "7-segment-x-3.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  value           1    wreg     unsigned char 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  value           1    2[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2060 ;;      Params:         0       0       0       0
  2061 ;;      Locals:         1       0       0       0
  2062 ;;      Temps:          2       0       0       0
  2063 ;;      Totals:         3       0       0       0
  2064 ;;Total ram usage:        3 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_show_LED1
  2070 ;;		_show_LED2
  2071 ;;		_show_LED3
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _convert_to_segment
  2077  0594                     _convert_to_segment:	
  2078                           
  2079                           ;incstack = 0
  2080                           ; Regs used in _convert_to_segment: [wreg-fsr0h+status,2+status,0]
  2081                           ;convert_to_segment@value stored from wreg
  2082  0594  00F2               	movwf	convert_to_segment@value
  2083  0595                     l1126:	
  2084  0595  2E54               	goto	l1130
  2085  0596                     l110:	
  2086  0596  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0597  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0598  1006               	bcf	6,0	;volatile
  2089  0599  1086               	bcf	6,1	;volatile
  2090  059A  1106               	bcf	6,2	;volatile
  2091  059B  1186               	bcf	6,3	;volatile
  2092  059C  1206               	bcf	6,4	;volatile
  2093  059D  1286               	bcf	6,5	;volatile
  2094  059E  1306               	bcf	6,6	;volatile
  2095  059F  2E94               	goto	l130
  2096  05A0                     l112:	
  2097  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2098  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2099  05A2  1006               	bcf	6,0	;volatile
  2100  05A3  1086               	bcf	6,1	;volatile
  2101  05A4  1106               	bcf	6,2	;volatile
  2102  05A5  1186               	bcf	6,3	;volatile
  2103  05A6  1206               	bcf	6,4	;volatile
  2104  05A7  1286               	bcf	6,5	;volatile
  2105  05A8  1706               	bsf	6,6	;volatile
  2106  05A9  2E94               	goto	l130
  2107  05AA                     l113:	
  2108  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2109  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2110  05AC  1406               	bsf	6,0	;volatile
  2111  05AD  1486               	bsf	6,1	;volatile
  2112  05AE  1506               	bsf	6,2	;volatile
  2113  05AF  1586               	bsf	6,3	;volatile
  2114  05B0  1606               	bsf	6,4	;volatile
  2115  05B1  1686               	bsf	6,5	;volatile
  2116  05B2  1306               	bcf	6,6	;volatile
  2117  05B3  2E94               	goto	l130
  2118  05B4                     l114:	
  2119  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2120  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2121  05B6  1006               	bcf	6,0	;volatile
  2122  05B7  1486               	bsf	6,1	;volatile
  2123  05B8  1506               	bsf	6,2	;volatile
  2124  05B9  1186               	bcf	6,3	;volatile
  2125  05BA  1206               	bcf	6,4	;volatile
  2126  05BB  1286               	bcf	6,5	;volatile
  2127  05BC  1306               	bcf	6,6	;volatile
  2128  05BD  2E94               	goto	l130
  2129  05BE                     l115:	
  2130  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2131  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2132  05C0  1406               	bsf	6,0	;volatile
  2133  05C1  1486               	bsf	6,1	;volatile
  2134  05C2  1106               	bcf	6,2	;volatile
  2135  05C3  1586               	bsf	6,3	;volatile
  2136  05C4  1606               	bsf	6,4	;volatile
  2137  05C5  1286               	bcf	6,5	;volatile
  2138  05C6  1706               	bsf	6,6	;volatile
  2139  05C7  2E94               	goto	l130
  2140  05C8                     l116:	
  2141  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2142  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2143  05CA  1406               	bsf	6,0	;volatile
  2144  05CB  1486               	bsf	6,1	;volatile
  2145  05CC  1506               	bsf	6,2	;volatile
  2146  05CD  1586               	bsf	6,3	;volatile
  2147  05CE  1206               	bcf	6,4	;volatile
  2148  05CF  1286               	bcf	6,5	;volatile
  2149  05D0  1706               	bsf	6,6	;volatile
  2150  05D1  2E94               	goto	l130
  2151  05D2                     l117:	
  2152  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2154  05D4  1006               	bcf	6,0	;volatile
  2155  05D5  1486               	bsf	6,1	;volatile
  2156  05D6  1506               	bsf	6,2	;volatile
  2157  05D7  1186               	bcf	6,3	;volatile
  2158  05D8  1206               	bcf	6,4	;volatile
  2159  05D9  1686               	bsf	6,5	;volatile
  2160  05DA  1706               	bsf	6,6	;volatile
  2161  05DB  2E94               	goto	l130
  2162  05DC                     l118:	
  2163  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2164  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2165  05DE  1406               	bsf	6,0	;volatile
  2166  05DF  1086               	bcf	6,1	;volatile
  2167  05E0  1506               	bsf	6,2	;volatile
  2168  05E1  1586               	bsf	6,3	;volatile
  2169  05E2  1206               	bcf	6,4	;volatile
  2170  05E3  1686               	bsf	6,5	;volatile
  2171  05E4  1706               	bsf	6,6	;volatile
  2172  05E5  2E94               	goto	l130
  2173  05E6                     l119:	
  2174  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2175  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2176  05E8  1406               	bsf	6,0	;volatile
  2177  05E9  1086               	bcf	6,1	;volatile
  2178  05EA  1506               	bsf	6,2	;volatile
  2179  05EB  1586               	bsf	6,3	;volatile
  2180  05EC  1606               	bsf	6,4	;volatile
  2181  05ED  1686               	bsf	6,5	;volatile
  2182  05EE  1706               	bsf	6,6	;volatile
  2183  05EF  2E94               	goto	l130
  2184  05F0                     l120:	
  2185  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2186  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2187  05F2  1406               	bsf	6,0	;volatile
  2188  05F3  1486               	bsf	6,1	;volatile
  2189  05F4  1506               	bsf	6,2	;volatile
  2190  05F5  1186               	bcf	6,3	;volatile
  2191  05F6  1206               	bcf	6,4	;volatile
  2192  05F7  1286               	bcf	6,5	;volatile
  2193  05F8  1306               	bcf	6,6	;volatile
  2194  05F9  2E94               	goto	l130
  2195  05FA                     l121:	
  2196  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2197  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2198  05FC  1406               	bsf	6,0	;volatile
  2199  05FD  1486               	bsf	6,1	;volatile
  2200  05FE  1506               	bsf	6,2	;volatile
  2201  05FF  1586               	bsf	6,3	;volatile
  2202  0600  1606               	bsf	6,4	;volatile
  2203  0601  1686               	bsf	6,5	;volatile
  2204  0602  1706               	bsf	6,6	;volatile
  2205  0603  2E94               	goto	l130
  2206  0604                     l122:	
  2207  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0606  1406               	bsf	6,0	;volatile
  2210  0607  1486               	bsf	6,1	;volatile
  2211  0608  1506               	bsf	6,2	;volatile
  2212  0609  1586               	bsf	6,3	;volatile
  2213  060A  1206               	bcf	6,4	;volatile
  2214  060B  1686               	bsf	6,5	;volatile
  2215  060C  1706               	bsf	6,6	;volatile
  2216  060D  2E94               	goto	l130
  2217  060E                     l123:	
  2218  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2219  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0610  1406               	bsf	6,0	;volatile
  2221  0611  1486               	bsf	6,1	;volatile
  2222  0612  1506               	bsf	6,2	;volatile
  2223  0613  1186               	bcf	6,3	;volatile
  2224  0614  1606               	bsf	6,4	;volatile
  2225  0615  1686               	bsf	6,5	;volatile
  2226  0616  1706               	bsf	6,6	;volatile
  2227  0617  2E94               	goto	l130
  2228  0618                     l124:	
  2229  0618  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0619  1303               	bcf	3,6	;RP1=0, select bank0
  2231  061A  1006               	bcf	6,0	;volatile
  2232  061B  1486               	bsf	6,1	;volatile
  2233  061C  1506               	bsf	6,2	;volatile
  2234  061D  1586               	bsf	6,3	;volatile
  2235  061E  1606               	bsf	6,4	;volatile
  2236  061F  1286               	bcf	6,5	;volatile
  2237  0620  1706               	bsf	6,6	;volatile
  2238  0621  2E94               	goto	l130
  2239  0622                     l125:	
  2240  0622  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0623  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0624  1406               	bsf	6,0	;volatile
  2243  0625  1486               	bsf	6,1	;volatile
  2244  0626  1106               	bcf	6,2	;volatile
  2245  0627  1186               	bcf	6,3	;volatile
  2246  0628  1206               	bcf	6,4	;volatile
  2247  0629  1686               	bsf	6,5	;volatile
  2248  062A  1706               	bsf	6,6	;volatile
  2249  062B  2E94               	goto	l130
  2250  062C                     l126:	
  2251  062C  1283               	bcf	3,5	;RP0=0, select bank0
  2252  062D  1303               	bcf	3,6	;RP1=0, select bank0
  2253  062E  1006               	bcf	6,0	;volatile
  2254  062F  1086               	bcf	6,1	;volatile
  2255  0630  1506               	bsf	6,2	;volatile
  2256  0631  1186               	bcf	6,3	;volatile
  2257  0632  1606               	bsf	6,4	;volatile
  2258  0633  1686               	bsf	6,5	;volatile
  2259  0634  1706               	bsf	6,6	;volatile
  2260  0635  2E94               	goto	l130
  2261  0636                     l127:	
  2262  0636  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0637  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0638  1006               	bcf	6,0	;volatile
  2265  0639  1086               	bcf	6,1	;volatile
  2266  063A  1506               	bsf	6,2	;volatile
  2267  063B  1586               	bsf	6,3	;volatile
  2268  063C  1606               	bsf	6,4	;volatile
  2269  063D  1286               	bcf	6,5	;volatile
  2270  063E  1706               	bsf	6,6	;volatile
  2271  063F  2E94               	goto	l130
  2272  0640                     l128:	
  2273  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0641  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0642  1006               	bcf	6,0	;volatile
  2276  0643  1086               	bcf	6,1	;volatile
  2277  0644  1106               	bcf	6,2	;volatile
  2278  0645  1586               	bsf	6,3	;volatile
  2279  0646  1606               	bsf	6,4	;volatile
  2280  0647  1686               	bsf	6,5	;volatile
  2281  0648  1706               	bsf	6,6	;volatile
  2282  0649  2E94               	goto	l130
  2283  064A                     l129:	
  2284  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2285  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2286  064C  1406               	bsf	6,0	;volatile
  2287  064D  1086               	bcf	6,1	;volatile
  2288  064E  1106               	bcf	6,2	;volatile
  2289  064F  1586               	bsf	6,3	;volatile
  2290  0650  1606               	bsf	6,4	;volatile
  2291  0651  1686               	bsf	6,5	;volatile
  2292  0652  1706               	bsf	6,6	;volatile
  2293  0653  2E94               	goto	l130
  2294  0654                     l1130:	
  2295  0654  0872               	movf	convert_to_segment@value,w
  2296  0655  00F0               	movwf	??_convert_to_segment
  2297  0656  01F1               	clrf	??_convert_to_segment+1
  2298                           
  2299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2300                           ; Switch size 1, requested type "simple"
  2301                           ; Number of cases is 1, Range of values is 0 to 0
  2302                           ; switch strategies available:
  2303                           ; Name         Instructions Cycles
  2304                           ; simple_byte            4     3 (average)
  2305                           ; direct_byte            9     7 (fixed)
  2306                           ; jumptable            260     6 (fixed)
  2307                           ;	Chosen strategy is simple_byte
  2308  0657  0871               	movf	??_convert_to_segment+1,w
  2309  0658  3A00               	xorlw	0	; case 0
  2310  0659  1903               	skipnz
  2311  065A  2E5C               	goto	l1476
  2312  065B  2E4A               	goto	l129
  2313  065C                     l1476:	
  2314                           
  2315                           ; Switch size 1, requested type "simple"
  2316                           ; Number of cases is 18, Range of values is 0 to 17
  2317                           ; switch strategies available:
  2318                           ; Name         Instructions Cycles
  2319                           ; direct_byte           43     7 (fixed)
  2320                           ; simple_byte           55    28 (average)
  2321                           ; jumptable            260     6 (fixed)
  2322                           ;	Chosen strategy is simple_byte
  2323  065C  0870               	movf	??_convert_to_segment,w
  2324  065D  3A00               	xorlw	0	; case 0
  2325  065E  1903               	skipnz
  2326  065F  2DAA               	goto	l113
  2327  0660  3A01               	xorlw	1	; case 1
  2328  0661  1903               	skipnz
  2329  0662  2DB4               	goto	l114
  2330  0663  3A03               	xorlw	3	; case 2
  2331  0664  1903               	skipnz
  2332  0665  2DBE               	goto	l115
  2333  0666  3A01               	xorlw	1	; case 3
  2334  0667  1903               	skipnz
  2335  0668  2DC8               	goto	l116
  2336  0669  3A07               	xorlw	7	; case 4
  2337  066A  1903               	skipnz
  2338  066B  2DD2               	goto	l117
  2339  066C  3A01               	xorlw	1	; case 5
  2340  066D  1903               	skipnz
  2341  066E  2DDC               	goto	l118
  2342  066F  3A03               	xorlw	3	; case 6
  2343  0670  1903               	skipnz
  2344  0671  2DE6               	goto	l119
  2345  0672  3A01               	xorlw	1	; case 7
  2346  0673  1903               	skipnz
  2347  0674  2DF0               	goto	l120
  2348  0675  3A0F               	xorlw	15	; case 8
  2349  0676  1903               	skipnz
  2350  0677  2DFA               	goto	l121
  2351  0678  3A01               	xorlw	1	; case 9
  2352  0679  1903               	skipnz
  2353  067A  2E04               	goto	l122
  2354  067B  3A03               	xorlw	3	; case 10
  2355  067C  1903               	skipnz
  2356  067D  2E0E               	goto	l123
  2357  067E  3A01               	xorlw	1	; case 11
  2358  067F  1903               	skipnz
  2359  0680  2E18               	goto	l124
  2360  0681  3A07               	xorlw	7	; case 12
  2361  0682  1903               	skipnz
  2362  0683  2E22               	goto	l125
  2363  0684  3A01               	xorlw	1	; case 13
  2364  0685  1903               	skipnz
  2365  0686  2E2C               	goto	l126
  2366  0687  3A03               	xorlw	3	; case 14
  2367  0688  1903               	skipnz
  2368  0689  2E36               	goto	l127
  2369  068A  3A01               	xorlw	1	; case 15
  2370  068B  1903               	skipnz
  2371  068C  2E40               	goto	l128
  2372  068D  3A1F               	xorlw	31	; case 16
  2373  068E  1903               	skipnz
  2374  068F  2D96               	goto	l110
  2375  0690  3A01               	xorlw	1	; case 17
  2376  0691  1903               	skipnz
  2377  0692  2DA0               	goto	l112
  2378  0693  2E4A               	goto	l129
  2379  0694                     l130:	
  2380  0694  0008               	return
  2381  0695                     __end_of_convert_to_segment:	
  2382                           
  2383                           	psect	text10
  2384  02EF                     __ptext10:	
  2385 ;; *************** function ___wmul *****************
  2386 ;; Defined at:
  2387 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  multiplier      2    0[COMMON] unsigned int 
  2390 ;;  multiplicand    2    2[COMMON] unsigned int 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  product         2    4[COMMON] unsigned int 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[COMMON] unsigned int 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, status,0
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2402 ;;      Params:         4       0       0       0
  2403 ;;      Locals:         2       0       0       0
  2404 ;;      Temps:          0       0       0       0
  2405 ;;      Totals:         6       0       0       0
  2406 ;;Total ram usage:        6 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_get_temp
  2412 ;;		_draw_to_LED
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function ___wmul
  2418  02EF                     ___wmul:	
  2419  02EF                     l1228:	
  2420                           ;incstack = 0
  2421                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2422                           
  2423  02EF  01F4               	clrf	___wmul@product
  2424  02F0  01F5               	clrf	___wmul@product+1
  2425  02F1                     l1230:	
  2426  02F1  1C70               	btfss	___wmul@multiplier,0
  2427  02F2  2AF4               	goto	u361
  2428  02F3  2AF5               	goto	u360
  2429  02F4                     u361:	
  2430  02F4  2AFB               	goto	l260
  2431  02F5                     u360:	
  2432  02F5                     l1232:	
  2433  02F5  0872               	movf	___wmul@multiplicand,w
  2434  02F6  07F4               	addwf	___wmul@product,f
  2435  02F7  1803               	skipnc
  2436  02F8  0AF5               	incf	___wmul@product+1,f
  2437  02F9  0873               	movf	___wmul@multiplicand+1,w
  2438  02FA  07F5               	addwf	___wmul@product+1,f
  2439  02FB                     l260:	
  2440  02FB  3001               	movlw	1
  2441  02FC                     u375:	
  2442  02FC  1003               	clrc
  2443  02FD  0DF2               	rlf	___wmul@multiplicand,f
  2444  02FE  0DF3               	rlf	___wmul@multiplicand+1,f
  2445  02FF  3EFF               	addlw	-1
  2446  0300  1D03               	skipz
  2447  0301  2AFC               	goto	u375
  2448  0302                     l1234:	
  2449  0302  3001               	movlw	1
  2450  0303                     u385:	
  2451  0303  1003               	clrc
  2452  0304  0CF1               	rrf	___wmul@multiplier+1,f
  2453  0305  0CF0               	rrf	___wmul@multiplier,f
  2454  0306  3EFF               	addlw	-1
  2455  0307  1D03               	skipz
  2456  0308  2B03               	goto	u385
  2457  0309                     l1236:	
  2458  0309  0870               	movf	___wmul@multiplier,w
  2459  030A  0471               	iorwf	___wmul@multiplier+1,w
  2460  030B  1D03               	btfss	3,2
  2461  030C  2B0E               	goto	u391
  2462  030D  2B0F               	goto	u390
  2463  030E                     u391:	
  2464  030E  2AF1               	goto	l1230
  2465  030F                     u390:	
  2466  030F                     l1238:	
  2467  030F  0875               	movf	___wmul@product+1,w
  2468  0310  00F1               	movwf	?___wmul+1
  2469  0311  0874               	movf	___wmul@product,w
  2470  0312  00F0               	movwf	?___wmul
  2471  0313                     l262:	
  2472  0313  0008               	return
  2473  0314                     __end_of___wmul:	
  2474                           
  2475                           	psect	text11
  2476  03B4                     __ptext11:	
  2477 ;; *************** function ___awdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  divisor         2    6[COMMON] int 
  2482 ;;  dividend        2    8[COMMON] int 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  quotient        2    2[BANK0 ] int 
  2485 ;;  sign            1    1[BANK0 ] unsigned char 
  2486 ;;  counter         1    0[BANK0 ] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    6[COMMON] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2496 ;;      Params:         4       0       0       0
  2497 ;;      Locals:         0       4       0       0
  2498 ;;      Temps:          1       0       0       0
  2499 ;;      Totals:         5       4       0       0
  2500 ;;Total ram usage:        9 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_get_temp
  2506 ;;		_draw_to_LED
  2507 ;;		_draw_temp
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           
  2512                           ;psect for function ___awdiv
  2513  03B4                     ___awdiv:	
  2514  03B4                     l1242:	
  2515                           ;incstack = 0
  2516                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2517                           
  2518  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2519  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2520  03B6  01A1               	clrf	___awdiv@sign
  2521  03B7                     l1244:	
  2522  03B7  1FF7               	btfss	___awdiv@divisor+1,7
  2523  03B8  2BBA               	goto	u401
  2524  03B9  2BBB               	goto	u400
  2525  03BA                     u401:	
  2526  03BA  2BC2               	goto	l1250
  2527  03BB                     u400:	
  2528  03BB                     l1246:	
  2529  03BB  09F6               	comf	___awdiv@divisor,f
  2530  03BC  09F7               	comf	___awdiv@divisor+1,f
  2531  03BD  0AF6               	incf	___awdiv@divisor,f
  2532  03BE  1903               	skipnz
  2533  03BF  0AF7               	incf	___awdiv@divisor+1,f
  2534  03C0                     l1248:	
  2535  03C0  01A1               	clrf	___awdiv@sign
  2536  03C1  0AA1               	incf	___awdiv@sign,f
  2537  03C2                     l1250:	
  2538  03C2  1FF9               	btfss	___awdiv@dividend+1,7
  2539  03C3  2BC5               	goto	u411
  2540  03C4  2BC6               	goto	u410
  2541  03C5                     u411:	
  2542  03C5  2BCF               	goto	l1256
  2543  03C6                     u410:	
  2544  03C6                     l1252:	
  2545  03C6  09F8               	comf	___awdiv@dividend,f
  2546  03C7  09F9               	comf	___awdiv@dividend+1,f
  2547  03C8  0AF8               	incf	___awdiv@dividend,f
  2548  03C9  1903               	skipnz
  2549  03CA  0AF9               	incf	___awdiv@dividend+1,f
  2550  03CB                     l1254:	
  2551  03CB  3001               	movlw	1
  2552  03CC  00FA               	movwf	??___awdiv
  2553  03CD  087A               	movf	??___awdiv,w
  2554  03CE  06A1               	xorwf	___awdiv@sign,f
  2555  03CF                     l1256:	
  2556  03CF  01A2               	clrf	___awdiv@quotient
  2557  03D0  01A3               	clrf	___awdiv@quotient+1
  2558  03D1                     l1258:	
  2559  03D1  0876               	movf	___awdiv@divisor,w
  2560  03D2  0477               	iorwf	___awdiv@divisor+1,w
  2561  03D3  1903               	btfsc	3,2
  2562  03D4  2BD6               	goto	u421
  2563  03D5  2BD7               	goto	u420
  2564  03D6                     u421:	
  2565  03D6  2C0E               	goto	l1278
  2566  03D7                     u420:	
  2567  03D7                     l1260:	
  2568  03D7  01A0               	clrf	___awdiv@counter
  2569  03D8  0AA0               	incf	___awdiv@counter,f
  2570  03D9  2BE5               	goto	l1266
  2571  03DA                     l1262:	
  2572  03DA  3001               	movlw	1
  2573  03DB                     u435:	
  2574  03DB  1003               	clrc
  2575  03DC  0DF6               	rlf	___awdiv@divisor,f
  2576  03DD  0DF7               	rlf	___awdiv@divisor+1,f
  2577  03DE  3EFF               	addlw	-1
  2578  03DF  1D03               	skipz
  2579  03E0  2BDB               	goto	u435
  2580  03E1                     l1264:	
  2581  03E1  3001               	movlw	1
  2582  03E2  00FA               	movwf	??___awdiv
  2583  03E3  087A               	movf	??___awdiv,w
  2584  03E4  07A0               	addwf	___awdiv@counter,f
  2585  03E5                     l1266:	
  2586  03E5  1FF7               	btfss	___awdiv@divisor+1,7
  2587  03E6  2BE8               	goto	u441
  2588  03E7  2BE9               	goto	u440
  2589  03E8                     u441:	
  2590  03E8  2BDA               	goto	l1262
  2591  03E9                     u440:	
  2592  03E9                     l1268:	
  2593  03E9  3001               	movlw	1
  2594  03EA                     u455:	
  2595  03EA  1003               	clrc
  2596  03EB  0DA2               	rlf	___awdiv@quotient,f
  2597  03EC  0DA3               	rlf	___awdiv@quotient+1,f
  2598  03ED  3EFF               	addlw	-1
  2599  03EE  1D03               	skipz
  2600  03EF  2BEA               	goto	u455
  2601  03F0  0877               	movf	___awdiv@divisor+1,w
  2602  03F1  0279               	subwf	___awdiv@dividend+1,w
  2603  03F2  1D03               	skipz
  2604  03F3  2BF6               	goto	u465
  2605  03F4  0876               	movf	___awdiv@divisor,w
  2606  03F5  0278               	subwf	___awdiv@dividend,w
  2607  03F6                     u465:	
  2608  03F6  1C03               	skipc
  2609  03F7  2BF9               	goto	u461
  2610  03F8  2BFA               	goto	u460
  2611  03F9                     u461:	
  2612  03F9  2C01               	goto	l1274
  2613  03FA                     u460:	
  2614  03FA                     l1270:	
  2615  03FA  0876               	movf	___awdiv@divisor,w
  2616  03FB  02F8               	subwf	___awdiv@dividend,f
  2617  03FC  0877               	movf	___awdiv@divisor+1,w
  2618  03FD  1C03               	skipc
  2619  03FE  03F9               	decf	___awdiv@dividend+1,f
  2620  03FF  02F9               	subwf	___awdiv@dividend+1,f
  2621  0400                     l1272:	
  2622  0400  1422               	bsf	___awdiv@quotient,0
  2623  0401                     l1274:	
  2624  0401  3001               	movlw	1
  2625  0402                     u475:	
  2626  0402  1003               	clrc
  2627  0403  0CF7               	rrf	___awdiv@divisor+1,f
  2628  0404  0CF6               	rrf	___awdiv@divisor,f
  2629  0405  3EFF               	addlw	-1
  2630  0406  1D03               	skipz
  2631  0407  2C02               	goto	u475
  2632  0408                     l1276:	
  2633  0408  3001               	movlw	1
  2634  0409  02A0               	subwf	___awdiv@counter,f
  2635  040A  1D03               	btfss	3,2
  2636  040B  2C0D               	goto	u481
  2637  040C  2C0E               	goto	u480
  2638  040D                     u481:	
  2639  040D  2BE9               	goto	l1268
  2640  040E                     u480:	
  2641  040E                     l1278:	
  2642  040E  0821               	movf	___awdiv@sign,w
  2643  040F  1903               	btfsc	3,2
  2644  0410  2C12               	goto	u491
  2645  0411  2C13               	goto	u490
  2646  0412                     u491:	
  2647  0412  2C18               	goto	l1282
  2648  0413                     u490:	
  2649  0413                     l1280:	
  2650  0413  09A2               	comf	___awdiv@quotient,f
  2651  0414  09A3               	comf	___awdiv@quotient+1,f
  2652  0415  0AA2               	incf	___awdiv@quotient,f
  2653  0416  1903               	skipnz
  2654  0417  0AA3               	incf	___awdiv@quotient+1,f
  2655  0418                     l1282:	
  2656  0418  0823               	movf	___awdiv@quotient+1,w
  2657  0419  00F7               	movwf	?___awdiv+1
  2658  041A  0822               	movf	___awdiv@quotient,w
  2659  041B  00F6               	movwf	?___awdiv
  2660  041C                     l413:	
  2661  041C  0008               	return
  2662  041D                     __end_of___awdiv:	
  2663                           
  2664                           	psect	text12
  2665  02D4                     __ptext12:	
  2666 ;; *************** function _draw_empty *****************
  2667 ;; Defined at:
  2668 ;;		line 315 in file "7-segment-x-3.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2682 ;;      Params:         0       0       0       0
  2683 ;;      Locals:         0       0       0       0
  2684 ;;      Temps:          2       0       0       0
  2685 ;;      Totals:         2       0       0       0
  2686 ;;Total ram usage:        2 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _draw_empty
  2697  02D4                     _draw_empty:	
  2698  02D4                     l1286:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _draw_empty: [wreg]
  2701                           
  2702  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2703  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2704  02D6  1006               	bcf	6,0	;volatile
  2705  02D7  1086               	bcf	6,1	;volatile
  2706  02D8  1106               	bcf	6,2	;volatile
  2707  02D9  1186               	bcf	6,3	;volatile
  2708  02DA  1206               	bcf	6,4	;volatile
  2709  02DB  1286               	bcf	6,5	;volatile
  2710  02DC  1306               	bcf	6,6	;volatile
  2711  02DD  1205               	bcf	5,4	;volatile
  2712  02DE  1305               	bcf	5,6	;volatile
  2713  02DF  1385               	bcf	5,7	;volatile
  2714  02E0                     l1288:	
  2715  02E0  3008               	movlw	8
  2716  02E1  00F1               	movwf	??_draw_empty+1
  2717  02E2  30C9               	movlw	201
  2718  02E3  00F0               	movwf	??_draw_empty
  2719  02E4                     u727:	
  2720  02E4  0BF0               	decfsz	??_draw_empty,f
  2721  02E5  2AE4               	goto	u727
  2722  02E6  0BF1               	decfsz	??_draw_empty+1,f
  2723  02E7  2AE4               	goto	u727
  2724  02E8  2AE9               	nop2
  2725  02E9                     l1290:	
  2726  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2727  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2728  02EB  1605               	bsf	5,4	;volatile
  2729  02EC                     l1292:	
  2730  02EC  1705               	bsf	5,6	;volatile
  2731  02ED                     l1294:	
  2732  02ED  1785               	bsf	5,7	;volatile
  2733  02EE                     l174:	
  2734  02EE  0008               	return
  2735  02EF                     __end_of_draw_empty:	
  2736  007E                     btemp	set	126	;btemp
  2737  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         3
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      28
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_draw_to_LED
    _get_temp->___awdiv
    _draw_to_LED->___awdiv
    _show_LED3->_convert_to_segment
    _show_LED2->_convert_to_segment
    _show_LED1->_convert_to_segment
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_get_temp
    _get_temp->___awdiv
    _draw_to_LED->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9501
                                             13 COMMON     1     1      0
                                 _TX
                         _draw_empty
                        _draw_to_LED
                           _get_temp
                            _init_ds
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _get_temp                                            18    16      2    4465
                                              4 BANK0     18    16      2
                                 _RX
                                 _TX
                            ___awdiv
                             ___wmul
                            _init_ds
 ---------------------------------------------------------------------------------
 (1) _init_ds                                              3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TX                                                   5     5      0     227
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _RX                                                   3     3      0      72
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _draw_to_LED                                          8     6      2    4587
                                             11 COMMON     2     2      0
                                              4 BANK0      6     4      2
                            ___awdiv
                             ___wmul
                          _show_LED1
                          _show_LED2
                          _show_LED3
 ---------------------------------------------------------------------------------
 (1) _show_LED3                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (1) _show_LED2                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (1) _show_LED1                                            3     3      0      44
                                              3 COMMON     3     3      0
                 _convert_to_segment
 ---------------------------------------------------------------------------------
 (2) _convert_to_segment                                   3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1460
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2428
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _draw_empty                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TX
   _draw_empty
   _draw_to_LED
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _show_LED1
       _convert_to_segment
     _show_LED2
       _convert_to_segment
     _show_LED3
       _convert_to_segment
   _get_temp
     _RX
     _TX
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _init_ds
   _init_ds
   _show_LED1
     _convert_to_segment
   _show_LED2
     _convert_to_segment
   _show_LED3
     _convert_to_segment

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      1C       3       35.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A      10        0.0%
ABS                  0      0      2A       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec  7 21:40:01 2019

                __CFG_CP$OFF 0000                           l70 03B3                           l63 0339  
                         l73 033D                           l81 0593                           l66 0370  
                         l76 0364                           l69 03A7                           l79 058F  
                         _RX 033A                           _TX 0365                 ___awdiv@sign 0021  
        ___wmul@multiplicand 0072                 ?_draw_to_LED 0024                          ?_RX 0070  
                        ?_TX 0070                          l110 0596                          l120 05F0  
                        l112 05A0                          l121 05FA                          l113 05AA  
                        l122 0604                          l114 05B4                          l130 0694  
                        l123 060E                          l115 05BE                          l124 0618  
                        l116 05C8                          l125 0622                          l117 05D2  
                        l133 02A9                          l126 062C                          l118 05DC  
                        l127 0636                          l119 05E6                          l128 0640  
                        l136 02BE                          l129 064A                          l139 02D3  
                        l260 02FB                          l413 041C                          l174 02EE  
                        l262 0313                          l168 07F1                          RX@d 0071  
                        RX@i 0072                          TX@i 0073                          _RA0 0028  
                        _RB0 0030                          _RB1 0031                          _RB2 0032  
                        _RA4 002C                          _RB3 0033                          _RB4 0034  
                        _RA6 002E                          _RB5 0035                          _RA7 002F  
                        _RB6 0036                          _RB7 0037                          u400 03BB  
                        u320 0374                          u401 03BA                          u321 0373  
                        u410 03C6                          u330 03B3                          u411 03C5  
                        u331 03B2                          u420 03D7                          u500 069B  
                        u340 0353                          u421 03D6                          u501 069A  
                        u341 0352                          u510 06B9                          u350 0363  
                        u511 06B8                          u351 0362                          u440 03E9  
                        u360 02F5                          u520 0742                          u600 047B  
                        u441 03E8                          u361 02F4                          u521 0741  
                        u601 047A                          u530 04C8                          u610 04A4  
               __CFG_CPD$OFF 0000                          u435 03DB                          u515 06B5  
                        u531 04C7                          u611 04A3                          u460 03FA  
                        u461 03F9                          u525 073E                          u390 030F  
                        u550 0506                          u455 03EA                          u391 030E  
                        u375 02FC                          u551 0505                          u615 04A0  
                        u480 040E                          u560 0432                          u481 040D  
                        u465 03F6                          u385 0303                          u545 04E3  
                        u561 0431                          u490 0413                          u570 0448  
                        u491 0412                          u475 0402                          u707 02B6  
                        u571 0447                          u580 0456                          u717 02A1  
                        u637 0322                          u581 0455                          u590 0465  
                        u727 02E4                          u647 032A                          u591 0464  
                        u657 0335                          u667 038B                          u677 039C  
                        u687 0356                          u697 02CB                         ??_RX 0070  
                       ??_TX 0070                 __CFG_LVP$OFF 0000                         l1200 02C4  
                       l1130 0654                         l1202 02C7                         l1204 02D0  
                       l1300 06AC                         l1220 0359                         l1212 034B  
                       l1140 031A                         l1230 02F1                         l1126 0595  
                       l1310 06F8                         l1302 06B9                         l1222 035D  
                       l1214 034D                         l1206 033A                         l1150 0338  
                       l1142 0325                         l1232 02F5                         l1320 0742  
                       l1312 06FC                         l1304 06C0                         l1224 0363  
                       l1216 0353                         l1144 0328                         l1136 0314  
                       l1400 0432                         l1250 03C2                         l1242 03B4  
                       l1234 0302                         l1330 07BB                         l1322 074C  
                       l1314 071F                         l1306 06C4                         l1218 0354  
                       l1170 038E                         l1154 0366                         l1146 032D  
                       l1138 0314                         l1410 0451                         l1402 043A  
                       l1260 03D7                         l1252 03C6                         l1244 03B7  
                       l1236 0309                         l1228 02EF                         l1340 07EA  
                       l1332 07BC                         l1324 077F                         l1308 06F7  
                       l1316 0724                         l1180 03AD                         l1172 039A  
                       l1164 0374                         l1156 0367                         l1148 0333  
                       l1420 047B                         l1412 0456                         l1404 043D  
                       l1270 03FA                         l1262 03DA                         l1254 03CB  
                       l1246 03BB                         l1238 030F                         l1182 0296  
                       l1190 02AB                         l1350 07EF                         l1342 07EB  
                       l1334 07C0                         l1326 0784                         l1318 0735  
                       l1174 039E                         l1166 0380                         l1158 036B  
                       l1430 04B2                         l1422 0488                         l1414 045E  
                       l1406 0440                         l1280 0413                         l1272 0400  
                       l1264 03E1                         l1256 03CF                         l1248 03C0  
                       l1184 029A                         l1192 02AF                         l1352 07F0  
                       l1344 07EC                         l1336 07E3                         l1328 0788  
                       l1176 03A4                         l1168 0389                         l1360 04C8  
                       l1424 048F                         l1416 0465                         l1408 0448  
                       l1290 02E9                         l1282 0418                         l1274 0401  
                       l1266 03E5                         l1258 03D1                         l1186 029D  
                       l1194 02B2                         l1346 07ED                         l1338 07E7  
                       l1178 03A9                         l1370 04F8                         l1362 04E0  
                       l1354 04B7                         l1426 0497                         l1418 0472  
                       l1292 02EC                         l1276 0408                         l1268 03E9  
                       l1188 02A6                         l1196 02BB                         l1348 07EE  
                       l1372 04FC                         l1364 04ED                         l1356 04BA  
                       l1428 04A4                         l1294 02ED                         l1286 02D4  
                       l1278 040E                         l1198 02C0                         l1382 0553  
                       l1374 0500                         l1366 04F2                         l1358 04C3  
                       l1288 02E0                         l1296 0695                         l1376 0501  
                       l1368 04F5                         l1392 041D                         l1298 069B  
                       l1378 0506                         l1394 0421                         l1476 065C  
                       l1388 0591                         l1396 0424                         l1398 042D  
                       _main 041D                         _init 003B                         _temp 0039  
                       btemp 007E                         start 0000          get_temp@temperature 0030  
                      ?_main 0070              __end_of___awdiv 041D                __CFG_WDTE$OFF 0000  
                      _CMCON 001F              ___awdiv@divisor 0076                        TX@cmd 0071  
            ___awdiv@counter 0020                        _PORTA 0005                        _TRISA 0085  
                      _TRISB 0086              __end_of_init_ds 033A               __CFG_BOREN$OFF 0000  
                      status 0003                        wtemp0 007E               __CFG_MCLRE$OFF 0000  
            __initialization 07F2                 draw_to_LED@d 0028                 draw_to_LED@i 0024  
           draw_to_LED@d_135 0026                 __end_of_main 04B7                       ??_main 007D  
              get_temp@temp1 0034                get_temp@temp2 0035             ___awdiv@dividend 0078  
__size_of_convert_to_segment 0101                       TX@temp 0072                       _TRISA0 0428  
             __CFG_PWRTE$OFF 0000             __end_of_get_temp 0594                       ___wmul 02EF  
                  ??___awdiv 007A             ___awdiv@quotient 0022         __size_of_draw_to_LED 015D  
                  ??_init_ds 0070      __end_of__initialization 07FD               __pcstackCOMMON 0070  
               __pidataBANK0 0293                   __end_of_RX 0365                   __end_of_TX 03B4  
                 __pbssBANK0 0036                   __pmaintext 041D                      ?___wmul 0070  
         __size_of_show_LED1 0015           __size_of_show_LED2 0015           __size_of_show_LED3 0015  
                 _draw_empty 02D4                    ?_get_temp 0024                      ___awdiv 03B4  
            __size_of___wmul 0025                      __ptext1 04B7                      __ptext2 0314  
                    __ptext3 0365                      __ptext4 033A                      __ptext5 0695  
                    __ptext6 02BF                      __ptext7 02AA                      __ptext8 0295  
                    __ptext9 0594                      _counter 0036                      _init_ds 0314  
                 ??_get_temp 0026         end_of_initialization 07FD            __end_of_show_LED1 02AA  
          __end_of_show_LED2 02BF            __end_of_show_LED3 02D4   __end_of_convert_to_segment 0695  
                ?_draw_empty 0070               __end_of___wmul 0314                ??_draw_to_LED 007B  
        start_initialization 07F2                     ??___wmul 0074      convert_to_segment@value 0072  
                __pdataBANK0 0039          __size_of_draw_empty 001B                    ___latbits 0001  
              __pcstackBANK0 0020          __end_of_draw_to_LED 07F2            __size_of_get_temp 00DD  
                  __pnvBANK0 003B                     ?___awdiv 0076              get_temp@signloc 0032  
                   ?_init_ds 0070                  __size_of_RX 002B                  __size_of_TX 004F  
             ___wmul@product 0074                   show_LED1@c 0075                   show_LED2@c 0075  
                 show_LED3@c 0075                    _show_LED1 0295                    _show_LED2 02AA  
                  _show_LED3 02BF                  _draw_to_LED 0695            ___wmul@multiplier 0070  
          get_temp@temp_drob 0033                 ??_draw_empty 0070           _convert_to_segment 0594  
                 ?_show_LED1 0070                   ?_show_LED2 0070                   ?_show_LED3 0070  
           __size_of___awdiv 0069          ?_convert_to_segment 0070           __end_of_draw_empty 02EF  
           __size_of_init_ds 0026                     __ptext10 02EF                     __ptext11 03B4  
                   __ptext12 02D4                     _get_temp 04B7         ??_convert_to_segment 0070  
              __size_of_main 009A                     _nosensor 0038                   TX@control0 0074  
                   init_ds@b 0071                  ??_show_LED1 0073                  ??_show_LED2 0073  
                ??_show_LED3 0073           __CFG_FOSC$INTOSCIO 0000  
